module CalculatedFormulas where

import qualified Data.Map as Map
import Formula(Formula)
import ParseCnf
import NormalForm(getStats,FormulaStats(..))
import Data.Maybe(fromJust)
import Data.List(intercalate, delete)
import qualified Data.Set as Set
import Data.Maybe

formulas :: Map.Map String (Map.Map String (Map.Map Int Formula))
formulas = Map.fromList [
    -- Calculated using MinimizeFormula.minimizeFullTseitin. First, the Tseitin transform was performed. Then, the formula and all equivalence terms were minimized one by one. The resulting CNFs were concatenated to get the final CNF.
    ("OptFullTseitin", Map.fromList [
        ("add", Map.fromList [
            (1, parseCnf "((7) && (-0 || 1 || 3) && (-0 || -1 || -3) && (0 || -1 || 3) && (0 || 1 || -3) && (1 || -4) && (0 || -4) && (-0 || -1 || 4) && (-2 || -3 || 5) && (2 || -3 || -5) && (-2 || 3 || -5) && (2 || 3 || 5) && (-4 || -6) && (4 || 6) && (6 || -7) && (5 || -7) && (-5 || -6 || 7))"),
            (2, parseCnf "((18) && (2 || -6) && (0 || -6) && (-0 || -2 || 6) && (6 || -7) && (1 || -7) && (-1 || -6 || 7) && (3 || -8) && (1 || -8) && (-1 || -3 || 8) && (-1 || -3 || -6 || 9) && (-1 || -3 || 6 || -9) && (-1 || 3 || -6 || -9) && (-1 || 3 || 6 || 9) && (1 || -3 || 6 || 9) && (1 || -3 || -6 || -9) && (1 || 3 || -6 || 9) && (1 || 3 || 6 || -9) && (-0 || 2 || 10) && (-0 || -2 || -10) && (0 || -2 || 10) && (0 || 2 || -10) && (-7 || 11) && (-8 || 11) && (7 || 8 || -11) && (6 || -12) && (3 || -12) && (-3 || -6 || 12) && (-5 || -9 || 13) && (5 || -9 || -13) && (-5 || 9 || -13) && (5 || 9 || 13) && (-4 || -10 || 14) && (4 || -10 || -14) && (-4 || 10 || -14) && (4 || 10 || 14) && (-11 || 15) && (-12 || 15) && (11 || 12 || -15) && (14 || -16) && (13 || -16) && (-13 || -14 || 16) && (-15 || -17) && (15 || 17) && (17 || -18) && (16 || -18) && (-16 || -17 || 18))"),
            (3, parseCnf "((30) && (3 || -9) && (0 || -9) && (-0 || -3 || 9) && (9 || -10) && (1 || -10) && (-1 || -9 || 10) && (4 || -11) && (1 || -11) && (-1 || -4 || 11) && (-10 || 12) && (-11 || 12) && (10 || 11 || -12) && (9 || -13) && (4 || -13) && (-4 || -9 || 13) && (-12 || 14) && (-13 || 14) && (12 || 13 || -14) && (-1 || -4 || -9 || 15) && (-1 || -4 || 9 || -15) && (-1 || 4 || -9 || -15) && (-1 || 4 || 9 || 15) && (1 || -4 || 9 || 15) && (1 || -4 || -9 || -15) && (1 || 4 || -9 || 15) && (1 || 4 || 9 || -15) && (-0 || 3 || 16) && (-0 || -3 || -16) && (0 || -3 || 16) && (0 || 3 || -16) && (-11 || 17) && (-13 || 17) && (-10 || 17) && (10 || 11 || 13 || -17) && (14 || -18) && (2 || -18) && (-2 || -14 || 18) && (5 || -19) && (2 || -19) && (-2 || -5 || 19) && (-7 || -15 || 20) && (7 || -15 || -20) && (-7 || 15 || -20) && (7 || 15 || 20) && (-6 || -16 || 21) && (6 || -16 || -21) && (-6 || 16 || -21) && (6 || 16 || 21) && (-2 || -5 || -17 || 22) && (-2 || -5 || 17 || -22) && (-2 || 5 || -17 || -22) && (-2 || 5 || 17 || 22) && (2 || -5 || 17 || 22) && (2 || -5 || -17 || -22) && (2 || 5 || -17 || 22) && (2 || 5 || 17 || -22) && (-18 || 23) && (-19 || 23) && (18 || 19 || -23) && (14 || -24) && (5 || -24) && (-5 || -14 || 24) && (-8 || -22 || 25) && (8 || -22 || -25) && (-8 || 22 || -25) && (8 || 22 || 25) && (-23 || 26) && (-24 || 26) && (23 || 24 || -26) && (21 || -27) && (20 || -27) && (-20 || -21 || 27) && (27 || -28) && (25 || -28) && (-25 || -27 || 28) && (-26 || -29) && (26 || 29) && (29 || -30) && (28 || -30) && (-28 || -29 || 30))"),
            (4, parseCnf "((44) && (4 || -12) && (0 || -12) && (-0 || -4 || 12) && (12 || -13) && (1 || -13) && (-1 || -12 || 13) && (5 || -14) && (1 || -14) && (-1 || -5 || 14) && (-13 || 15) && (-14 || 15) && (13 || 14 || -15) && (12 || -16) && (5 || -16) && (-5 || -12 || 16) && (-15 || 17) && (-16 || 17) && (15 || 16 || -17) && (17 || -18) && (2 || -18) && (-2 || -17 || 18) && (6 || -19) && (2 || -19) && (-2 || -6 || 19) && (-14 || 20) && (-16 || 20) && (-13 || 20) && (13 || 14 || 16 || -20) && (-18 || 21) && (-19 || 21) && (18 || 19 || -21) && (17 || -22) && (6 || -22) && (-6 || -17 || 22) && (-1 || -5 || -12 || 23) && (-1 || -5 || 12 || -23) && (-1 || 5 || -12 || -23) && (-1 || 5 || 12 || 23) && (1 || -5 || 12 || 23) && (1 || -5 || -12 || -23) && (1 || 5 || -12 || 23) && (1 || 5 || 12 || -23) && (-0 || 4 || 24) && (-0 || -4 || -24) && (0 || -4 || 24) && (0 || 4 || -24) && (-21 || 25) && (-22 || 25) && (21 || 22 || -25) && (20 || -26) && (6 || -26) && (-6 || -20 || 26) && (20 || -27) && (2 || -27) && (-2 || -20 || 27) && (-9 || -23 || 28) && (9 || -23 || -28) && (-9 || 23 || -28) && (9 || 23 || 28) && (-8 || -24 || 29) && (8 || -24 || -29) && (-8 || 24 || -29) && (8 || 24 || 29) && (-2 || -6 || -20 || 30) && (-2 || -6 || 20 || -30) && (-2 || 6 || -20 || -30) && (-2 || 6 || 20 || 30) && (2 || -6 || 20 || 30) && (2 || -6 || -20 || -30) && (2 || 6 || -20 || 30) && (2 || 6 || 20 || -30) && (-26 || 31) && (-27 || 31) && (-19 || 31) && (19 || 26 || 27 || -31) && (25 || -32) && (3 || -32) && (-3 || -25 || 32) && (7 || -33) && (3 || -33) && (-3 || -7 || 33) && (-10 || -30 || 34) && (10 || -30 || -34) && (-10 || 30 || -34) && (10 || 30 || 34) && (-3 || -7 || -31 || 35) && (-3 || -7 || 31 || -35) && (-3 || 7 || -31 || -35) && (-3 || 7 || 31 || 35) && (3 || -7 || 31 || 35) && (3 || -7 || -31 || -35) && (3 || 7 || -31 || 35) && (3 || 7 || 31 || -35) && (-32 || 36) && (-33 || 36) && (32 || 33 || -36) && (29 || -37) && (28 || -37) && (-28 || -29 || 37) && (25 || -38) && (7 || -38) && (-7 || -25 || 38) && (-11 || -35 || 39) && (11 || -35 || -39) && (-11 || 35 || -39) && (11 || 35 || 39) && (-36 || 40) && (-38 || 40) && (36 || 38 || -40) && (37 || -41) && (34 || -41) && (-34 || -37 || 41) && (41 || -42) && (39 || -42) && (-39 || -41 || 42) && (-40 || -43) && (40 || 43) && (43 || -44) && (42 || -44) && (-42 || -43 || 44))"),
            (5, parseCnf "((58) && (5 || -15) && (0 || -15) && (-0 || -5 || 15) && (15 || -16) && (1 || -16) && (-1 || -15 || 16) && (6 || -17) && (1 || -17) && (-1 || -6 || 17) && (-16 || 18) && (-17 || 18) && (16 || 17 || -18) && (15 || -19) && (6 || -19) && (-6 || -15 || 19) && (-18 || 20) && (-19 || 20) && (18 || 19 || -20) && (20 || -21) && (2 || -21) && (-2 || -20 || 21) && (7 || -22) && (2 || -22) && (-2 || -7 || 22) && (-21 || 23) && (-22 || 23) && (21 || 22 || -23) && (20 || -24) && (7 || -24) && (-7 || -20 || 24) && (-23 || 25) && (-24 || 25) && (23 || 24 || -25) && (-17 || 26) && (-19 || 26) && (-16 || 26) && (16 || 17 || 19 || -26) && (26 || -27) && (7 || -27) && (-7 || -26 || 27) && (25 || -28) && (3 || -28) && (-3 || -25 || 28) && (8 || -29) && (3 || -29) && (-3 || -8 || 29) && (26 || -30) && (2 || -30) && (-2 || -26 || 30) && (-1 || -6 || -15 || 31) && (-1 || -6 || 15 || -31) && (-1 || 6 || -15 || -31) && (-1 || 6 || 15 || 31) && (1 || -6 || 15 || 31) && (1 || -6 || -15 || -31) && (1 || 6 || -15 || 31) && (1 || 6 || 15 || -31) && (-0 || 5 || 32) && (-0 || -5 || -32) && (0 || -5 || 32) && (0 || 5 || -32) && (-27 || 33) && (-30 || 33) && (-22 || 33) && (22 || 27 || 30 || -33) && (-28 || 34) && (-29 || 34) && (28 || 29 || -34) && (25 || -35) && (8 || -35) && (-8 || -25 || 35) && (-11 || -31 || 36) && (11 || -31 || -36) && (-11 || 31 || -36) && (11 || 31 || 36) && (-10 || -32 || 37) && (10 || -32 || -37) && (-10 || 32 || -37) && (10 || 32 || 37) && (-2 || -7 || -26 || 38) && (-2 || -7 || 26 || -38) && (-2 || 7 || -26 || -38) && (-2 || 7 || 26 || 38) && (2 || -7 || 26 || 38) && (2 || -7 || -26 || -38) && (2 || 7 || -26 || 38) && (2 || 7 || 26 || -38) && (-34 || 39) && (-35 || 39) && (34 || 35 || -39) && (33 || -40) && (8 || -40) && (-8 || -33 || 40) && (33 || -41) && (3 || -41) && (-3 || -33 || 41) && (-12 || -38 || 42) && (12 || -38 || -42) && (-12 || 38 || -42) && (12 || 38 || 42) && (-3 || -8 || -33 || 43) && (-3 || -8 || 33 || -43) && (-3 || 8 || -33 || -43) && (-3 || 8 || 33 || 43) && (3 || -8 || 33 || 43) && (3 || -8 || -33 || -43) && (3 || 8 || -33 || 43) && (3 || 8 || 33 || -43) && (-40 || 44) && (-41 || 44) && (-29 || 44) && (29 || 40 || 41 || -44) && (37 || -45) && (36 || -45) && (-36 || -37 || 45) && (39 || -46) && (4 || -46) && (-4 || -39 || 46) && (9 || -47) && (4 || -47) && (-4 || -9 || 47) && (-13 || -43 || 48) && (13 || -43 || -48) && (-13 || 43 || -48) && (13 || 43 || 48) && (-4 || -9 || -44 || 49) && (-4 || -9 || 44 || -49) && (-4 || 9 || -44 || -49) && (-4 || 9 || 44 || 49) && (4 || -9 || 44 || 49) && (4 || -9 || -44 || -49) && (4 || 9 || -44 || 49) && (4 || 9 || 44 || -49) && (-46 || 50) && (-47 || 50) && (46 || 47 || -50) && (45 || -51) && (42 || -51) && (-42 || -45 || 51) && (39 || -52) && (9 || -52) && (-9 || -39 || 52) && (-14 || -49 || 53) && (14 || -49 || -53) && (-14 || 49 || -53) && (14 || 49 || 53) && (-50 || 54) && (-52 || 54) && (50 || 52 || -54) && (51 || -55) && (48 || -55) && (-48 || -51 || 55) && (55 || -56) && (53 || -56) && (-53 || -55 || 56) && (-54 || -57) && (54 || 57) && (57 || -58) && (56 || -58) && (-56 || -57 || 58))")
        ]),
        ("mul", Map.fromList [
            (1, parseCnf "((7) && (-3) && (1 || -4) && (0 || -4) && (-0 || -1 || 4) && (-2 || -4 || 5) && (2 || -4 || -5) && (-2 || 4 || -5) && (2 || 4 || 5) && (-3 || -6) && (3 || 6) && (6 || -7) && (5 || -7) && (-5 || -6 || 7))"),
            (2, parseCnf "((20) && (2 || -6) && (1 || -6) && (-1 || -2 || 6) && (3 || -7) && (0 || -7) && (-0 || -3 || 7) && (-6 || 7 || 8) && (-6 || -7 || -8) && (6 || -7 || 8) && (6 || 7 || -8) && (7 || -9) && (6 || -9) && (-6 || -7 || 9) && (3 || -10) && (1 || -10) && (-1 || -3 || 10) && (2 || -11) && (0 || -11) && (-0 || -2 || 11) && (-5 || -8 || 12) && (5 || -8 || -12) && (-5 || 8 || -12) && (5 || 8 || 12) && (-4 || -11 || 13) && (4 || -11 || -13) && (-4 || 11 || -13) && (4 || 11 || 13) && (-9 || 10 || 14) && (-9 || -10 || -14) && (9 || -10 || 14) && (9 || 10 || -14) && (13 || -15) && (12 || -15) && (-12 || -13 || 15) && (10 || -16) && (9 || -16) && (-9 || -10 || 16) && (-14 || -17) && (14 || 17) && (17 || -18) && (15 || -18) && (-15 || -17 || 18) && (-16 || -19) && (16 || 19) && (19 || -20) && (18 || -20) && (-18 || -19 || 20))"),
            (3, parseCnf "((56) && (3 || -9) && (1 || -9) && (-1 || -3 || 9) && (4 || -10) && (0 || -10) && (-0 || -4 || 10) && (10 || -11) && (9 || -11) && (-9 || -10 || 11) && (3 || -12) && (2 || -12) && (-2 || -3 || 12) && (4 || -13) && (1 || -13) && (-1 || -4 || 13) && (13 || -14) && (11 || -14) && (-11 || -13 || 14) && (13 || -15) && (12 || -15) && (-12 || -13 || 15) && (-11 || 12 || 16) && (-11 || -12 || -16) && (11 || -12 || 16) && (11 || 12 || -16) && (-14 || 17) && (-15 || 17) && (14 || 15 || -17) && (12 || -18) && (11 || -18) && (-11 || -12 || 18) && (-13 || 16 || 19) && (-13 || -16 || -19) && (13 || -16 || 19) && (13 || 16 || -19) && (-17 || 20) && (-18 || 20) && (17 || 18 || -20) && (4 || -21) && (2 || -21) && (-2 || -4 || 21) && (5 || -22) && (0 || -22) && (-0 || -5 || 22) && (-20 || 21 || 23) && (-20 || -21 || -23) && (20 || -21 || 23) && (20 || 21 || -23) && (22 || -24) && (19 || -24) && (-19 || -22 || 24) && (5 || -25) && (1 || -25) && (-1 || -5 || 25) && (25 || -26) && (23 || -26) && (-23 || -25 || 26) && (25 || -27) && (24 || -27) && (-24 || -25 || 27) && (-11 || -12 || -13 || 28) && (-11 || -12 || 13 || -28) && (-11 || 12 || -13 || -28) && (-11 || 12 || 13 || 28) && (11 || -12 || 13 || 28) && (11 || -12 || -13 || -28) && (11 || 12 || -13 || 28) && (11 || 12 || 13 || -28) && (-9 || 10 || 29) && (-9 || -10 || -29) && (9 || -10 || 29) && (9 || 10 || -29) && (-26 || 30) && (-27 || 30) && (26 || 27 || -30) && (24 || -31) && (23 || -31) && (-23 || -24 || 31) && (3 || -32) && (0 || -32) && (-0 || -3 || 32) && (-7 || -29 || 33) && (7 || -29 || -33) && (-7 || 29 || -33) && (7 || 29 || 33) && (-6 || -32 || 34) && (6 || -32 || -34) && (-6 || 32 || -34) && (6 || 32 || 34) && (-23 || 24 || 35) && (-23 || -24 || -35) && (23 || -24 || 35) && (23 || 24 || -35) && (-22 || 28 || 36) && (-22 || -28 || -36) && (22 || -28 || 36) && (22 || 28 || -36) && (-30 || 37) && (-31 || 37) && (30 || 31 || -37) && (21 || -38) && (20 || -38) && (-20 || -21 || 38) && (5 || -39) && (2 || -39) && (-2 || -5 || 39) && (-8 || -36 || 40) && (8 || -36 || -40) && (-8 || 36 || -40) && (8 || 36 || 40) && (-37 || 38 || 41) && (-37 || -38 || -41) && (37 || -38 || 41) && (37 || 38 || -41) && (-25 || 35 || 42) && (-25 || -35 || -42) && (25 || -35 || 42) && (25 || 35 || -42) && (34 || -43) && (33 || -43) && (-33 || -34 || 43) && (39 || -44) && (37 || -44) && (-37 || -39 || 44) && (39 || -45) && (38 || -45) && (-38 || -39 || 45) && (-39 || 41 || 46) && (-39 || -41 || -46) && (39 || -41 || 46) && (39 || 41 || -46) && (-44 || 47) && (-45 || 47) && (44 || 45 || -47) && (43 || -48) && (40 || -48) && (-40 || -43 || 48) && (38 || -49) && (37 || -49) && (-37 || -38 || 49) && (-42 || -50) && (42 || 50) && (-47 || 51) && (-49 || 51) && (47 || 49 || -51) && (50 || -52) && (48 || -52) && (-48 || -50 || 52) && (-46 || -53) && (46 || 53) && (53 || -54) && (52 || -54) && (-52 || -53 || 54) && (-51 || -55) && (51 || 55) && (55 || -56) && (54 || -56) && (-54 || -55 || 56))"),
            (4, parseCnf "((111) && (4 || -12) && (1 || -12) && (-1 || -4 || 12) && (5 || -13) && (0 || -13) && (-0 || -5 || 13) && (13 || -14) && (12 || -14) && (-12 || -13 || 14) && (4 || -15) && (2 || -15) && (-2 || -4 || 15) && (5 || -16) && (1 || -16) && (-1 || -5 || 16) && (16 || -17) && (14 || -17) && (-14 || -16 || 17) && (16 || -18) && (15 || -18) && (-15 || -16 || 18) && (-17 || 19) && (-18 || 19) && (17 || 18 || -19) && (15 || -20) && (14 || -20) && (-14 || -15 || 20) && (-14 || 15 || 21) && (-14 || -15 || -21) && (14 || -15 || 21) && (14 || 15 || -21) && (-19 || 22) && (-20 || 22) && (19 || 20 || -22) && (4 || -23) && (3 || -23) && (-3 || -4 || 23) && (-22 || 23 || 24) && (-22 || -23 || -24) && (22 || -23 || 24) && (22 || 23 || -24) && (-16 || 21 || 25) && (-16 || -21 || -25) && (16 || -21 || 25) && (16 || 21 || -25) && (5 || -26) && (2 || -26) && (-2 || -5 || 26) && (6 || -27) && (0 || -27) && (-0 || -6 || 27) && (-24 || 26 || 28) && (-24 || -26 || -28) && (24 || -26 || 28) && (24 || 26 || -28) && (26 || -29) && (22 || -29) && (-22 || -26 || 29) && (26 || -30) && (23 || -30) && (-23 || -26 || 30) && (27 || -31) && (25 || -31) && (-25 || -27 || 31) && (6 || -32) && (1 || -32) && (-1 || -6 || 32) && (-29 || 33) && (-30 || 33) && (29 || 30 || -33) && (23 || -34) && (22 || -34) && (-22 || -23 || 34) && (32 || -35) && (28 || -35) && (-28 || -32 || 35) && (32 || -36) && (31 || -36) && (-31 || -32 || 36) && (-33 || 37) && (-34 || 37) && (33 || 34 || -37) && (-35 || 38) && (-36 || 38) && (35 || 36 || -38) && (31 || -39) && (28 || -39) && (-28 || -31 || 39) && (5 || -40) && (3 || -40) && (-3 || -5 || 40) && (-28 || 31 || 41) && (-28 || -31 || -41) && (28 || -31 || 41) && (28 || 31 || -41) && (-37 || 40 || 42) && (-37 || -40 || -42) && (37 || -40 || 42) && (37 || 40 || -42) && (-38 || 43) && (-39 || 43) && (38 || 39 || -43) && (6 || -44) && (2 || -44) && (-2 || -6 || 44) && (-42 || 43 || 45) && (-42 || -43 || -45) && (42 || -43 || 45) && (42 || 43 || -45) && (-32 || 41 || 46) && (-32 || -41 || -46) && (32 || -41 || 46) && (32 || 41 || -46) && (44 || -47) && (42 || -47) && (-42 || -44 || 47) && (44 || -48) && (43 || -48) && (-43 || -44 || 48) && (7 || -49) && (0 || -49) && (-0 || -7 || 49) && (-44 || 45 || 50) && (-44 || -45 || -50) && (44 || -45 || 50) && (44 || 45 || -50) && (-47 || 51) && (-48 || 51) && (47 || 48 || -51) && (43 || -52) && (42 || -52) && (-42 || -43 || 52) && (49 || -53) && (46 || -53) && (-46 || -49 || 53) && (7 || -54) && (1 || -54) && (-1 || -7 || 54) && (-51 || 55) && (-52 || 55) && (51 || 52 || -55) && (40 || -56) && (37 || -56) && (-37 || -40 || 56) && (54 || -57) && (50 || -57) && (-50 || -54 || 57) && (54 || -58) && (53 || -58) && (-53 || -54 || 58) && (-55 || 56 || 59) && (-55 || -56 || -59) && (55 || -56 || 59) && (55 || 56 || -59) && (-14 || -15 || -16 || 60) && (-14 || -15 || 16 || -60) && (-14 || 15 || -16 || -60) && (-14 || 15 || 16 || 60) && (14 || -15 || 16 || 60) && (14 || -15 || -16 || -60) && (14 || 15 || -16 || 60) && (14 || 15 || 16 || -60) && (-18 || 61) && (-20 || 61) && (-17 || 61) && (17 || 18 || 20 || -61) && (-57 || 62) && (-58 || 62) && (57 || 58 || -62) && (53 || -63) && (50 || -63) && (-50 || -53 || 63) && (6 || -64) && (3 || -64) && (-3 || -6 || 64) && (-59 || 64 || 65) && (-59 || -64 || -65) && (59 || -64 || 65) && (59 || 64 || -65) && (-23 || -26 || -61 || 66) && (-23 || -26 || 61 || -66) && (-23 || 26 || -61 || -66) && (-23 || 26 || 61 || 66) && (23 || -26 || 61 || 66) && (23 || -26 || -61 || -66) && (23 || 26 || -61 || 66) && (23 || 26 || 61 || -66) && (-12 || 13 || 67) && (-12 || -13 || -67) && (12 || -13 || 67) && (12 || 13 || -67) && (-62 || 68) && (-63 || 68) && (62 || 63 || -68) && (60 || -69) && (27 || -69) && (-27 || -60 || 69) && (7 || -70) && (2 || -70) && (-2 || -7 || 70) && (4 || -71) && (0 || -71) && (-0 || -4 || 71) && (-9 || -67 || 72) && (9 || -67 || -72) && (-9 || 67 || -72) && (9 || 67 || 72) && (-8 || -71 || 73) && (8 || -71 || -73) && (-8 || 71 || -73) && (8 || 71 || 73) && (-32 || -66 || -69 || 74) && (-32 || -66 || 69 || -74) && (-32 || 66 || -69 || -74) && (-32 || 66 || 69 || 74) && (32 || -66 || 69 || 74) && (32 || -66 || -69 || -74) && (32 || 66 || -69 || 74) && (32 || 66 || 69 || -74) && (-27 || 60 || 75) && (-27 || -60 || -75) && (27 || -60 || 75) && (27 || 60 || -75) && (64 || -76) && (55 || -76) && (-55 || -64 || 76) && (64 || -77) && (56 || -77) && (-56 || -64 || 77) && (70 || -78) && (65 || -78) && (-65 || -70 || 78) && (70 || -79) && (68 || -79) && (-68 || -70 || 79) && (-10 || -75 || 80) && (10 || -75 || -80) && (-10 || 75 || -80) && (10 || 75 || 80) && (-50 || 53 || 81) && (-50 || -53 || -81) && (50 || -53 || 81) && (50 || 53 || -81) && (-49 || 74 || 82) && (-49 || -74 || -82) && (49 || -74 || 82) && (49 || 74 || -82) && (-76 || 83) && (-77 || 83) && (76 || 77 || -83) && (-78 || 84) && (-79 || 84) && (78 || 79 || -84) && (73 || -85) && (72 || -85) && (-72 || -73 || 85) && (68 || -86) && (65 || -86) && (-65 || -68 || 86) && (56 || -87) && (55 || -87) && (-55 || -56 || 87) && (-11 || -82 || 88) && (11 || -82 || -88) && (-11 || 82 || -88) && (11 || 82 || 88) && (-65 || 68 || 89) && (-65 || -68 || -89) && (65 || -68 || 89) && (65 || 68 || -89) && (-54 || 81 || 90) && (-54 || -81 || -90) && (54 || -81 || 90) && (54 || 81 || -90) && (-84 || 91) && (-86 || 91) && (84 || 86 || -91) && (-83 || 92) && (-87 || 92) && (83 || 87 || -92) && (85 || -93) && (80 || -93) && (-80 || -85 || 93) && (7 || -94) && (3 || -94) && (-3 || -7 || 94) && (-91 || 92 || 95) && (-91 || -92 || -95) && (91 || -92 || 95) && (91 || 92 || -95) && (-70 || 89 || 96) && (-70 || -89 || -96) && (70 || -89 || 96) && (70 || 89 || -96) && (93 || -97) && (88 || -97) && (-88 || -93 || 97) && (94 || -98) && (91 || -98) && (-91 || -94 || 98) && (94 || -99) && (92 || -99) && (-92 || -94 || 99) && (-90 || -100) && (90 || 100) && (-94 || 95 || 101) && (-94 || -95 || -101) && (94 || -95 || 101) && (94 || 95 || -101) && (-98 || 102) && (-99 || 102) && (98 || 99 || -102) && (92 || -103) && (91 || -103) && (-91 || -92 || 103) && (100 || -104) && (97 || -104) && (-97 || -100 || 104) && (-96 || -105) && (96 || 105) && (-102 || 106) && (-103 || 106) && (102 || 103 || -106) && (105 || -107) && (104 || -107) && (-104 || -105 || 107) && (-101 || -108) && (101 || 108) && (108 || -109) && (107 || -109) && (-107 || -108 || 109) && (-106 || -110) && (106 || 110) && (110 || -111) && (109 || -111) && (-109 || -110 || 111))"),
            (5, parseCnf undefined)
        ]),
        ("gt", Map.fromList [
            (1, parseCnf "((3) && (-1 || -2) && (0 || -2) && (-0 || 1 || 2) && (-2 || 3) && (2 || -3))"),
            (2, parseCnf "((8) && (-1 || -3 || 4) && (1 || -3 || -4) && (-1 || 3 || -4) && (1 || 3 || 4) && (-2 || -5) && (0 || -5) && (-0 || 2 || 5) && (5 || -6) && (4 || -6) && (-4 || -5 || 6) && (-3 || -7) && (1 || -7) && (-1 || 3 || 7) && (-6 || 8) && (-7 || 8) && (6 || 7 || -8))"),
            (3, parseCnf "((15) && (-2 || -5 || 6) && (2 || -5 || -6) && (-2 || 5 || -6) && (2 || 5 || 6) && (-1 || -4 || 7) && (1 || -4 || -7) && (-1 || 4 || -7) && (1 || 4 || 7) && (-4 || -8) && (1 || -8) && (-1 || 4 || 8) && (7 || -9) && (6 || -9) && (-6 || -7 || 9) && (8 || -10) && (6 || -10) && (-6 || -8 || 10) && (-5 || -11) && (2 || -11) && (-2 || 5 || 11) && (-3 || -12) && (0 || -12) && (-0 || 3 || 12) && (-10 || 13) && (-11 || 13) && (10 || 11 || -13) && (12 || -14) && (9 || -14) && (-9 || -12 || 14) && (-13 || 15) && (-14 || 15) && (13 || 14 || -15))"),
            (4, parseCnf "((22) && (-3 || -7 || 8) && (3 || -7 || -8) && (-3 || 7 || -8) && (3 || 7 || 8) && (-2 || -6 || 9) && (2 || -6 || -9) && (-2 || 6 || -9) && (2 || 6 || 9) && (-6 || -10) && (2 || -10) && (-2 || 6 || 10) && (-1 || -5 || 11) && (1 || -5 || -11) && (-1 || 5 || -11) && (1 || 5 || 11) && (9 || -12) && (8 || -12) && (-8 || -9 || 12) && (10 || -13) && (8 || -13) && (-8 || -10 || 13) && (-7 || -14) && (3 || -14) && (-3 || 7 || 14) && (-5 || -15) && (1 || -15) && (-1 || 5 || 15) && (-13 || 16) && (-14 || 16) && (13 || 14 || -16) && (12 || -17) && (11 || -17) && (-11 || -12 || 17) && (15 || -18) && (12 || -18) && (-12 || -15 || 18) && (-4 || -19) && (0 || -19) && (-0 || 4 || 19) && (-16 || 20) && (-18 || 20) && (16 || 18 || -20) && (19 || -21) && (17 || -21) && (-17 || -19 || 21) && (-20 || 22) && (-21 || 22) && (20 || 21 || -22))"),
            (5, parseCnf "((29) && (-4 || -9 || 10) && (4 || -9 || -10) && (-4 || 9 || -10) && (4 || 9 || 10) && (-3 || -8 || 11) && (3 || -8 || -11) && (-3 || 8 || -11) && (3 || 8 || 11) && (-8 || -12) && (3 || -12) && (-3 || 8 || 12) && (-2 || -7 || 13) && (2 || -7 || -13) && (-2 || 7 || -13) && (2 || 7 || 13) && (11 || -14) && (10 || -14) && (-10 || -11 || 14) && (12 || -15) && (10 || -15) && (-10 || -12 || 15) && (-9 || -16) && (4 || -16) && (-4 || 9 || 16) && (-7 || -17) && (2 || -17) && (-2 || 7 || 17) && (-1 || -6 || 18) && (1 || -6 || -18) && (-1 || 6 || -18) && (1 || 6 || 18) && (-15 || 19) && (-16 || 19) && (15 || 16 || -19) && (14 || -20) && (13 || -20) && (-13 || -14 || 20) && (17 || -21) && (14 || -21) && (-14 || -17 || 21) && (-6 || -22) && (1 || -22) && (-1 || 6 || 22) && (-19 || 23) && (-21 || 23) && (19 || 21 || -23) && (20 || -24) && (18 || -24) && (-18 || -20 || 24) && (22 || -25) && (20 || -25) && (-20 || -22 || 25) && (-5 || -26) && (0 || -26) && (-0 || 5 || 26) && (-23 || 27) && (-25 || 27) && (23 || 25 || -27) && (26 || -28) && (24 || -28) && (-24 || -26 || 28) && (-27 || 29) && (-28 || 29) && (27 || 28 || -29))"),
            (6, parseCnf "((36) && (-5 || -11 || 12) && (5 || -11 || -12) && (-5 || 11 || -12) && (5 || 11 || 12) && (-4 || -10 || 13) && (4 || -10 || -13) && (-4 || 10 || -13) && (4 || 10 || 13) && (-10 || -14) && (4 || -14) && (-4 || 10 || 14) && (-3 || -9 || 15) && (3 || -9 || -15) && (-3 || 9 || -15) && (3 || 9 || 15) && (13 || -16) && (12 || -16) && (-12 || -13 || 16) && (14 || -17) && (12 || -17) && (-12 || -14 || 17) && (-11 || -18) && (5 || -18) && (-5 || 11 || 18) && (-9 || -19) && (3 || -19) && (-3 || 9 || 19) && (-2 || -8 || 20) && (2 || -8 || -20) && (-2 || 8 || -20) && (2 || 8 || 20) && (-17 || 21) && (-18 || 21) && (17 || 18 || -21) && (16 || -22) && (15 || -22) && (-15 || -16 || 22) && (19 || -23) && (16 || -23) && (-16 || -19 || 23) && (-8 || -24) && (2 || -24) && (-2 || 8 || 24) && (-1 || -7 || 25) && (1 || -7 || -25) && (-1 || 7 || -25) && (1 || 7 || 25) && (-21 || 26) && (-23 || 26) && (21 || 23 || -26) && (22 || -27) && (20 || -27) && (-20 || -22 || 27) && (24 || -28) && (22 || -28) && (-22 || -24 || 28) && (-7 || -29) && (1 || -29) && (-1 || 7 || 29) && (-26 || 30) && (-28 || 30) && (26 || 28 || -30) && (27 || -31) && (25 || -31) && (-25 || -27 || 31) && (29 || -32) && (27 || -32) && (-27 || -29 || 32) && (-6 || -33) && (0 || -33) && (-0 || 6 || 33) && (-30 || 34) && (-32 || 34) && (30 || 32 || -34) && (33 || -35) && (31 || -35) && (-31 || -33 || 35) && (-34 || 36) && (-35 || 36) && (34 || 35 || -36))"),
            (7, parseCnf "((43) && (-6 || -13 || 14) && (6 || -13 || -14) && (-6 || 13 || -14) && (6 || 13 || 14) && (-5 || -12 || 15) && (5 || -12 || -15) && (-5 || 12 || -15) && (5 || 12 || 15) && (-12 || -16) && (5 || -16) && (-5 || 12 || 16) && (-4 || -11 || 17) && (4 || -11 || -17) && (-4 || 11 || -17) && (4 || 11 || 17) && (15 || -18) && (14 || -18) && (-14 || -15 || 18) && (16 || -19) && (14 || -19) && (-14 || -16 || 19) && (-13 || -20) && (6 || -20) && (-6 || 13 || 20) && (-11 || -21) && (4 || -21) && (-4 || 11 || 21) && (-3 || -10 || 22) && (3 || -10 || -22) && (-3 || 10 || -22) && (3 || 10 || 22) && (-19 || 23) && (-20 || 23) && (19 || 20 || -23) && (18 || -24) && (17 || -24) && (-17 || -18 || 24) && (21 || -25) && (18 || -25) && (-18 || -21 || 25) && (-10 || -26) && (3 || -26) && (-3 || 10 || 26) && (-2 || -9 || 27) && (2 || -9 || -27) && (-2 || 9 || -27) && (2 || 9 || 27) && (-23 || 28) && (-25 || 28) && (23 || 25 || -28) && (24 || -29) && (22 || -29) && (-22 || -24 || 29) && (26 || -30) && (24 || -30) && (-24 || -26 || 30) && (-9 || -31) && (2 || -31) && (-2 || 9 || 31) && (-1 || -8 || 32) && (1 || -8 || -32) && (-1 || 8 || -32) && (1 || 8 || 32) && (-28 || 33) && (-30 || 33) && (28 || 30 || -33) && (29 || -34) && (27 || -34) && (-27 || -29 || 34) && (31 || -35) && (29 || -35) && (-29 || -31 || 35) && (-8 || -36) && (1 || -36) && (-1 || 8 || 36) && (-33 || 37) && (-35 || 37) && (33 || 35 || -37) && (34 || -38) && (32 || -38) && (-32 || -34 || 38) && (36 || -39) && (34 || -39) && (-34 || -36 || 39) && (-7 || -40) && (0 || -40) && (-0 || 7 || 40) && (-37 || 41) && (-39 || 41) && (37 || 39 || -41) && (40 || -42) && (38 || -42) && (-38 || -40 || 42) && (-41 || 43) && (-42 || 43) && (41 || 42 || -43))"),
            (8, parseCnf "((50) && (-7 || -15 || 16) && (7 || -15 || -16) && (-7 || 15 || -16) && (7 || 15 || 16) && (-6 || -14 || 17) && (6 || -14 || -17) && (-6 || 14 || -17) && (6 || 14 || 17) && (-14 || -18) && (6 || -18) && (-6 || 14 || 18) && (-5 || -13 || 19) && (5 || -13 || -19) && (-5 || 13 || -19) && (5 || 13 || 19) && (17 || -20) && (16 || -20) && (-16 || -17 || 20) && (18 || -21) && (16 || -21) && (-16 || -18 || 21) && (-15 || -22) && (7 || -22) && (-7 || 15 || 22) && (-13 || -23) && (5 || -23) && (-5 || 13 || 23) && (-4 || -12 || 24) && (4 || -12 || -24) && (-4 || 12 || -24) && (4 || 12 || 24) && (-21 || 25) && (-22 || 25) && (21 || 22 || -25) && (20 || -26) && (19 || -26) && (-19 || -20 || 26) && (23 || -27) && (20 || -27) && (-20 || -23 || 27) && (-12 || -28) && (4 || -28) && (-4 || 12 || 28) && (-3 || -11 || 29) && (3 || -11 || -29) && (-3 || 11 || -29) && (3 || 11 || 29) && (-25 || 30) && (-27 || 30) && (25 || 27 || -30) && (26 || -31) && (24 || -31) && (-24 || -26 || 31) && (28 || -32) && (26 || -32) && (-26 || -28 || 32) && (-11 || -33) && (3 || -33) && (-3 || 11 || 33) && (-2 || -10 || 34) && (2 || -10 || -34) && (-2 || 10 || -34) && (2 || 10 || 34) && (-30 || 35) && (-32 || 35) && (30 || 32 || -35) && (31 || -36) && (29 || -36) && (-29 || -31 || 36) && (33 || -37) && (31 || -37) && (-31 || -33 || 37) && (-10 || -38) && (2 || -38) && (-2 || 10 || 38) && (-1 || -9 || 39) && (1 || -9 || -39) && (-1 || 9 || -39) && (1 || 9 || 39) && (-35 || 40) && (-37 || 40) && (35 || 37 || -40) && (36 || -41) && (34 || -41) && (-34 || -36 || 41) && (38 || -42) && (36 || -42) && (-36 || -38 || 42) && (-9 || -43) && (1 || -43) && (-1 || 9 || 43) && (-40 || 44) && (-42 || 44) && (40 || 42 || -44) && (41 || -45) && (39 || -45) && (-39 || -41 || 45) && (43 || -46) && (41 || -46) && (-41 || -43 || 46) && (-8 || -47) && (0 || -47) && (-0 || 8 || 47) && (-44 || 48) && (-46 || 48) && (44 || 46 || -48) && (47 || -49) && (45 || -49) && (-45 || -47 || 49) && (-48 || 50) && (-49 || 50) && (48 || 49 || -50))")
        ]),
        ("ge", Map.fromList [
            (1, parseCnf "((4) && (-0 || -2) && (1 || -2) && (0 || -1 || 2) && (-2 || 3) && (2 || -3) && (-3 || -4) && (3 || 4))"),
            (2, parseCnf "((9) && (-1 || -3 || 4) && (1 || -3 || -4) && (-1 || 3 || -4) && (1 || 3 || 4) && (-0 || -5) && (2 || -5) && (0 || -2 || 5) && (5 || -6) && (4 || -6) && (-4 || -5 || 6) && (-1 || -7) && (3 || -7) && (1 || -3 || 7) && (-6 || 8) && (-7 || 8) && (6 || 7 || -8) && (-8 || -9) && (8 || 9))"),
            (3, parseCnf "((16) && (-2 || -5 || 6) && (2 || -5 || -6) && (-2 || 5 || -6) && (2 || 5 || 6) && (-1 || -4 || 7) && (1 || -4 || -7) && (-1 || 4 || -7) && (1 || 4 || 7) && (-1 || -8) && (4 || -8) && (1 || -4 || 8) && (7 || -9) && (6 || -9) && (-6 || -7 || 9) && (8 || -10) && (6 || -10) && (-6 || -8 || 10) && (-2 || -11) && (5 || -11) && (2 || -5 || 11) && (-0 || -12) && (3 || -12) && (0 || -3 || 12) && (-10 || 13) && (-11 || 13) && (10 || 11 || -13) && (12 || -14) && (9 || -14) && (-9 || -12 || 14) && (-13 || 15) && (-14 || 15) && (13 || 14 || -15) && (-15 || -16) && (15 || 16))"),
            (4, parseCnf "((23) && (-3 || -7 || 8) && (3 || -7 || -8) && (-3 || 7 || -8) && (3 || 7 || 8) && (-2 || -6 || 9) && (2 || -6 || -9) && (-2 || 6 || -9) && (2 || 6 || 9) && (-2 || -10) && (6 || -10) && (2 || -6 || 10) && (-1 || -5 || 11) && (1 || -5 || -11) && (-1 || 5 || -11) && (1 || 5 || 11) && (9 || -12) && (8 || -12) && (-8 || -9 || 12) && (10 || -13) && (8 || -13) && (-8 || -10 || 13) && (-3 || -14) && (7 || -14) && (3 || -7 || 14) && (-1 || -15) && (5 || -15) && (1 || -5 || 15) && (-13 || 16) && (-14 || 16) && (13 || 14 || -16) && (12 || -17) && (11 || -17) && (-11 || -12 || 17) && (15 || -18) && (12 || -18) && (-12 || -15 || 18) && (-0 || -19) && (4 || -19) && (0 || -4 || 19) && (-16 || 20) && (-18 || 20) && (16 || 18 || -20) && (19 || -21) && (17 || -21) && (-17 || -19 || 21) && (-20 || 22) && (-21 || 22) && (20 || 21 || -22) && (-22 || -23) && (22 || 23))"),
            (5, parseCnf "((30) && (-4 || -9 || 10) && (4 || -9 || -10) && (-4 || 9 || -10) && (4 || 9 || 10) && (-3 || -8 || 11) && (3 || -8 || -11) && (-3 || 8 || -11) && (3 || 8 || 11) && (-3 || -12) && (8 || -12) && (3 || -8 || 12) && (-2 || -7 || 13) && (2 || -7 || -13) && (-2 || 7 || -13) && (2 || 7 || 13) && (11 || -14) && (10 || -14) && (-10 || -11 || 14) && (12 || -15) && (10 || -15) && (-10 || -12 || 15) && (-4 || -16) && (9 || -16) && (4 || -9 || 16) && (-2 || -17) && (7 || -17) && (2 || -7 || 17) && (-1 || -6 || 18) && (1 || -6 || -18) && (-1 || 6 || -18) && (1 || 6 || 18) && (-15 || 19) && (-16 || 19) && (15 || 16 || -19) && (14 || -20) && (13 || -20) && (-13 || -14 || 20) && (17 || -21) && (14 || -21) && (-14 || -17 || 21) && (-1 || -22) && (6 || -22) && (1 || -6 || 22) && (-19 || 23) && (-21 || 23) && (19 || 21 || -23) && (20 || -24) && (18 || -24) && (-18 || -20 || 24) && (22 || -25) && (20 || -25) && (-20 || -22 || 25) && (-0 || -26) && (5 || -26) && (0 || -5 || 26) && (-23 || 27) && (-25 || 27) && (23 || 25 || -27) && (26 || -28) && (24 || -28) && (-24 || -26 || 28) && (-27 || 29) && (-28 || 29) && (27 || 28 || -29) && (-29 || -30) && (29 || 30))"),
            (6, parseCnf "((37) && (-5 || -11 || 12) && (5 || -11 || -12) && (-5 || 11 || -12) && (5 || 11 || 12) && (-4 || -10 || 13) && (4 || -10 || -13) && (-4 || 10 || -13) && (4 || 10 || 13) && (-4 || -14) && (10 || -14) && (4 || -10 || 14) && (-3 || -9 || 15) && (3 || -9 || -15) && (-3 || 9 || -15) && (3 || 9 || 15) && (13 || -16) && (12 || -16) && (-12 || -13 || 16) && (14 || -17) && (12 || -17) && (-12 || -14 || 17) && (-5 || -18) && (11 || -18) && (5 || -11 || 18) && (-3 || -19) && (9 || -19) && (3 || -9 || 19) && (-2 || -8 || 20) && (2 || -8 || -20) && (-2 || 8 || -20) && (2 || 8 || 20) && (-17 || 21) && (-18 || 21) && (17 || 18 || -21) && (16 || -22) && (15 || -22) && (-15 || -16 || 22) && (19 || -23) && (16 || -23) && (-16 || -19 || 23) && (-2 || -24) && (8 || -24) && (2 || -8 || 24) && (-1 || -7 || 25) && (1 || -7 || -25) && (-1 || 7 || -25) && (1 || 7 || 25) && (-21 || 26) && (-23 || 26) && (21 || 23 || -26) && (22 || -27) && (20 || -27) && (-20 || -22 || 27) && (24 || -28) && (22 || -28) && (-22 || -24 || 28) && (-1 || -29) && (7 || -29) && (1 || -7 || 29) && (-26 || 30) && (-28 || 30) && (26 || 28 || -30) && (27 || -31) && (25 || -31) && (-25 || -27 || 31) && (29 || -32) && (27 || -32) && (-27 || -29 || 32) && (-0 || -33) && (6 || -33) && (0 || -6 || 33) && (-30 || 34) && (-32 || 34) && (30 || 32 || -34) && (33 || -35) && (31 || -35) && (-31 || -33 || 35) && (-34 || 36) && (-35 || 36) && (34 || 35 || -36) && (-36 || -37) && (36 || 37))"),
            (7, parseCnf "((44) && (-6 || -13 || 14) && (6 || -13 || -14) && (-6 || 13 || -14) && (6 || 13 || 14) && (-5 || -12 || 15) && (5 || -12 || -15) && (-5 || 12 || -15) && (5 || 12 || 15) && (-5 || -16) && (12 || -16) && (5 || -12 || 16) && (-4 || -11 || 17) && (4 || -11 || -17) && (-4 || 11 || -17) && (4 || 11 || 17) && (15 || -18) && (14 || -18) && (-14 || -15 || 18) && (16 || -19) && (14 || -19) && (-14 || -16 || 19) && (-6 || -20) && (13 || -20) && (6 || -13 || 20) && (-4 || -21) && (11 || -21) && (4 || -11 || 21) && (-3 || -10 || 22) && (3 || -10 || -22) && (-3 || 10 || -22) && (3 || 10 || 22) && (-19 || 23) && (-20 || 23) && (19 || 20 || -23) && (18 || -24) && (17 || -24) && (-17 || -18 || 24) && (21 || -25) && (18 || -25) && (-18 || -21 || 25) && (-3 || -26) && (10 || -26) && (3 || -10 || 26) && (-2 || -9 || 27) && (2 || -9 || -27) && (-2 || 9 || -27) && (2 || 9 || 27) && (-23 || 28) && (-25 || 28) && (23 || 25 || -28) && (24 || -29) && (22 || -29) && (-22 || -24 || 29) && (26 || -30) && (24 || -30) && (-24 || -26 || 30) && (-2 || -31) && (9 || -31) && (2 || -9 || 31) && (-1 || -8 || 32) && (1 || -8 || -32) && (-1 || 8 || -32) && (1 || 8 || 32) && (-28 || 33) && (-30 || 33) && (28 || 30 || -33) && (29 || -34) && (27 || -34) && (-27 || -29 || 34) && (31 || -35) && (29 || -35) && (-29 || -31 || 35) && (-1 || -36) && (8 || -36) && (1 || -8 || 36) && (-33 || 37) && (-35 || 37) && (33 || 35 || -37) && (34 || -38) && (32 || -38) && (-32 || -34 || 38) && (36 || -39) && (34 || -39) && (-34 || -36 || 39) && (-0 || -40) && (7 || -40) && (0 || -7 || 40) && (-37 || 41) && (-39 || 41) && (37 || 39 || -41) && (40 || -42) && (38 || -42) && (-38 || -40 || 42) && (-41 || 43) && (-42 || 43) && (41 || 42 || -43) && (-43 || -44) && (43 || 44))"),
            (8, parseCnf "((51) && (-7 || -15 || 16) && (7 || -15 || -16) && (-7 || 15 || -16) && (7 || 15 || 16) && (-6 || -14 || 17) && (6 || -14 || -17) && (-6 || 14 || -17) && (6 || 14 || 17) && (-6 || -18) && (14 || -18) && (6 || -14 || 18) && (-5 || -13 || 19) && (5 || -13 || -19) && (-5 || 13 || -19) && (5 || 13 || 19) && (17 || -20) && (16 || -20) && (-16 || -17 || 20) && (18 || -21) && (16 || -21) && (-16 || -18 || 21) && (-7 || -22) && (15 || -22) && (7 || -15 || 22) && (-5 || -23) && (13 || -23) && (5 || -13 || 23) && (-4 || -12 || 24) && (4 || -12 || -24) && (-4 || 12 || -24) && (4 || 12 || 24) && (-21 || 25) && (-22 || 25) && (21 || 22 || -25) && (20 || -26) && (19 || -26) && (-19 || -20 || 26) && (23 || -27) && (20 || -27) && (-20 || -23 || 27) && (-4 || -28) && (12 || -28) && (4 || -12 || 28) && (-3 || -11 || 29) && (3 || -11 || -29) && (-3 || 11 || -29) && (3 || 11 || 29) && (-25 || 30) && (-27 || 30) && (25 || 27 || -30) && (26 || -31) && (24 || -31) && (-24 || -26 || 31) && (28 || -32) && (26 || -32) && (-26 || -28 || 32) && (-3 || -33) && (11 || -33) && (3 || -11 || 33) && (-2 || -10 || 34) && (2 || -10 || -34) && (-2 || 10 || -34) && (2 || 10 || 34) && (-30 || 35) && (-32 || 35) && (30 || 32 || -35) && (31 || -36) && (29 || -36) && (-29 || -31 || 36) && (33 || -37) && (31 || -37) && (-31 || -33 || 37) && (-2 || -38) && (10 || -38) && (2 || -10 || 38) && (-1 || -9 || 39) && (1 || -9 || -39) && (-1 || 9 || -39) && (1 || 9 || 39) && (-35 || 40) && (-37 || 40) && (35 || 37 || -40) && (36 || -41) && (34 || -41) && (-34 || -36 || 41) && (38 || -42) && (36 || -42) && (-36 || -38 || 42) && (-1 || -43) && (9 || -43) && (1 || -9 || 43) && (-40 || 44) && (-42 || 44) && (40 || 42 || -44) && (41 || -45) && (39 || -45) && (-39 || -41 || 45) && (43 || -46) && (41 || -46) && (-41 || -43 || 46) && (-0 || -47) && (8 || -47) && (0 || -8 || 47) && (-44 || 48) && (-46 || 48) && (44 || 46 || -48) && (47 || -49) && (45 || -49) && (-45 || -47 || 49) && (-48 || 50) && (-49 || 50) && (48 || 49 || -50) && (-50 || -51) && (50 || 51))")
        ])
    ]),
    ("OptNatNoExtra", Map.fromList [
        ("add", Map.fromList [
            -- 4/9:
            (1, parseCnf "((-1 || 2) && (-0 || 2) && (-0 || -1) && (0 || 1 || -2))"),
            -- 11/32:
            (2, parseCnf "((-3 || 5) && (-1 || 5) && (-1 || -3) && (0 || 2 || -4) && (-2 || 4 || 5) && (-2 || -3 || 4) && (-1 || -2 || 4) && (-0 || -2 || -4) && (-0 || 2 || 4) && (1 || 3 || -4 || -5) && (0 || 1 || 3 || -5))"),
            -- 24/90:
            (3, parseCnf "((-5 || 8) && (-2 || 8) && (-2 || -5) && (0 || 3 || -6) && (-1 || -4 || 8) && (-1 || -4 || -5) && (-1 || -2 || -4) && (-0 || 3 || 6) && (0 || -3 || 6) && (-1 || 4 || -6 || 7) && (1 || -4 || -6 || 7) && (1 || 4 || -6 || -7) && (-0 || -3 || 7 || 8) && (-0 || -3 || -5 || 7) && (-0 || -2 || -3 || 7) && (0 || -1 || 4 || 7) && (0 || 1 || -4 || 7) && (0 || 1 || 4 || -7) && (2 || 5 || -6 || -7 || -8) && (1 || 2 || 4 || 5 || -8) && (-0 || -1 || -3 || -4 || 7) && (-0 || -1 || -3 || 4 || -7) && (-0 || 1 || -3 || -4 || -7) && (0 || 2 || 5 || -7 || -8))"),
            -- (43/191):
            (4, parseCnf "((-3 || -7) && (-7 || 11) && (-3 || 11) && (0 || 4 || -8) && (0 || -4 || 8) && (-1 || -5 || -8 || -9) && (1 || -5 || -8 || 9) && (0 || 1 || -5 || 9) && (1 || 5 || -8 || -9) && (-1 || -7 || 9 || 10) && (-0 || -4 || -5 || -7 || 10) && (-0 || -1 || -4 || -5 || 9) && (-0 || -3 || -4 || -5 || 10) && (-1 || -3 || 9 || 10) && (-1 || -2 || 6 || 9 || -10) && (-2 || -6 || 11) && (1 || 2 || 6 || -9 || -10) && (1 || 2 || -6 || -9 || 10) && (-2 || 5 || 6 || -8 || 10) && (0 || 1 || 5 || -9) && (-0 || 1 || -4 || 5 || 9) && (2 || 5 || -6 || -8 || 10) && (1 || -2 || 6 || -9 || 10) && (-1 || -2 || -6 || 9 || 10) && (-2 || -3 || -6) && (3 || 5 || 7 || -8 || -10 || -11) && (0 || -2 || 5 || 6 || 10) && (-0 || -2 || -4 || -5 || -6 || 10) && (0 || 2 || 5 || -6 || 10) && (-1 || 4 || -5 || -9) && (-1 || 9 || 10 || 11) && (1 || 3 || 7 || -9 || -10 || -11) && (2 || 3 || 6 || 7 || -11) && (-0 || -1 || -4 || 5 || -9) && (2 || 4 || 5 || 6 || -10) && (-0 || 2 || -4 || -5 || -6 || -10) && (-0 || -4 || -5 || 10 || 11) && (-0 || 4 || 8) && (-1 || 2 || -6 || 9 || -10) && (-2 || -6 || -7) && (0 || 3 || 5 || 7 || -10 || -11) && (2 || 5 || 6 || -8 || -10) && (-0 || -2 || -4 || -5 || 6 || -10))")
        ]),
        ("mul", Map.fromList [
            -- 3/7:
            (1, parseCnf "((1 || -2) && (0 || -2) && (-0 || -1 || 2))"),
            -- 9/24:
            (2, parseCnf "((-1 || -3) && (0 || -4) && (0 || -3 || -5) && (-0 || -2 || 4) && (-1 || 2 || -5) && (-0 || -3 || 5) && (2 || -4) && (1 || 3 || -5) && (-1 || -2 || 5))"),
            -- 20/57:
            (3, parseCnf "((-1 || -5) && (0 || -6) && (-1 || -4 || -6) && (-0 || -5 || 8) && (3 || -6) && (0 || -5 || -8) && (-2 || -3 || 8) && (1 || 4 || -7) && (0 || 3 || -7) && (-1 || -4 || 8) && (3 || 4 || -7) && (-1 || -3 || 7) && (0 || 1 || -7) && (-2 || -5) && (-2 || 3 || -8) && (2 || 4 || 5 || -8) && (1 || 2 || 5 || -8) && (-2 || -4) && (-0 || -3 || 6) && (-0 || -4 || 7))"),
            -- 37/123:
            (4, parseCnf "((-3 || -7) && (-3 || -6) && (-2 || -6) && (-2 || -7) && (0 || -8) && (4 || -8) && (-0 || -4 || 8) && (-0 || -7 || 11) && (-2 || -5 || 11) && (-2 || -4 || 10) && (0 || 4 || -9) && (4 || 5 || -9) && (0 || 1 || -9) && (-1 || -6 || 11) && (-0 || -5 || 9 || -10) && (-1 || -5 || 10 || 11) && (0 || 1 || 2 || -10) && (2 || 6 || -10 || -11) && (0 || 2 || 5 || -10) && (4 || 5 || 6 || -10) && (2 || 6 || -8 || -10) && (-1 || -4 || 9 || -10) && (-1 || -5 || 8 || 10) && (-1 || 3 || -4 || 6 || -9 || -11) && (3 || 5 || 6 || 7 || -11) && (-0 || 1 || -5 || 9) && (-1 || -4 || 5 || 9) && (1 || 4 || 6 || -10) && (-3 || 4 || -11) && (0 || -7 || -11) && (-0 || -1 || -5 || -6) && (-0 || -6 || 10) && (1 || 2 || 3 || 7 || -11) && (-1 || -7) && (-3 || -5) && (1 || 5 || -9) && (-3 || -4 || 11))")
        ]),
        ("gt", Map.fromList [
            -- 2/2:
            (1, parseCnf "((-1) && (0))"),
            -- 5/10:
            (2, parseCnf "((1 || -2) && (-2 || -3) && (1 || -3) && (0 || -3) && (0 || 1))"),
            -- 11/32:
            (3, parseCnf "((-3 || -4 || -5) && (0 || -4 || -5) && (1 || -3 || -5) && (2 || -3 || -4) && (1 || -4 || -5) && (0 || 2 || -4) && (2 || -5) && (1 || 2 || -3) && (0 || 1 || -5) && (1 || 2 || -4) && (0 || 1 || 2))"),
            -- 23/88:
            (4, parseCnf "((3 || -7) && (2 || 3 || -6) && (1 || -4 || -6 || -7) && (0 || -5 || -6 || -7) && (3 || -4 || -5 || -6) && (2 || -4 || -5 || -7) && (2 || 3 || -4 || -5) && (1 || 2 || -4 || -7) && (0 || 1 || -6 || -7) && (1 || 3 || -5 || -6) && (0 || 3 || -5 || -6) && (0 || 2 || -5 || -7) && (1 || 3 || -4 || -6) && (-4 || -5 || -6 || -7) && (1 || 2 || 3 || -5) && (1 || 2 || 3 || -4) && (1 || -5 || -6 || -7) && (0 || 1 || 3 || -6) && (0 || 1 || 2 || -7) && (0 || 1 || 2 || 3) && (1 || 2 || -5 || -7) && (2 || -6 || -7) && (0 || 2 || 3 || -5))"),
            -- 47/224:
            (5, parseCnf "((4 || -9) && (3 || -8 || -9) && (2 || 4 || -7 || -8) && (2 || 3 || -7 || -9) && (0 || -6 || -7 || -8 || -9) && (4 || -5 || -6 || -7 || -8) && (3 || 4 || -8) && (1 || -5 || -7 || -8 || -9) && (0 || 1 || -7 || -8 || -9) && (3 || 4 || -5 || -6 || -7) && (0 || 4 || -6 || -7 || -8) && (2 || 3 || -5 || -6 || -9) && (0 || 3 || -6 || -7 || -9) && (0 || 2 || -6 || -8 || -9) && (2 || 3 || 4 || -7) && (1 || 2 || -5 || -8 || -9) && (1 || 3 || -5 || -7 || -9) && (1 || 4 || -5 || -7 || -8) && (2 || 4 || -5 || -6 || -8) && (1 || 4 || -6 || -7 || -8) && (0 || 2 || 3 || -6 || -9) && (2 || -5 || -6 || -8 || -9) && (1 || 3 || 4 || -6 || -7) && (0 || 1 || 3 || -7 || -9) && (0 || 2 || 4 || -6 || -8) && (1 || 3 || -6 || -7 || -9) && (0 || 3 || 4 || -6 || -7) && (-5 || -6 || -7 || -8 || -9) && (1 || 2 || 4 || -6 || -8) && (1 || 2 || 3 || -5 || -9) && (2 || 3 || 4 || -5 || -6) && (0 || 1 || 4 || -7 || -8) && (2 || -7 || -8 || -9) && (0 || 2 || 3 || 4 || -6) && (1 || 2 || 3 || -6 || -9) && (0 || 1 || 2 || -8 || -9) && (1 || 2 || 3 || 4 || -5) && (1 || 2 || 4 || -5 || -8) && (3 || -5 || -6 || -7 || -9) && (1 || 2 || 3 || 4 || -6) && (1 || 3 || 4 || -5 || -7) && (0 || 1 || 2 || 3 || -9) && (1 || -6 || -7 || -8 || -9) && (0 || 1 || 3 || 4 || -7) && (0 || 1 || 2 || 4 || -8) && (1 || 2 || -6 || -8 || -9) && (0 || 1 || 2 || 3 || 4))"),
            -- 95/544:
            (6, parseCnf "((3 || -9 || -10 || -11) && (2 || -8 || -9 || -10 || -11) && (-6 || -7 || -8 || -9 || -10 || -11) && (3 || -6 || -7 || -8 || -10 || -11) && (4 || -6 || -7 || -8 || -9 || -11) && (2 || -6 || -7 || -9 || -10 || -11) && (1 || -6 || -8 || -9 || -10 || -11) && (5 || -6 || -7 || -8 || -9 || -10) && (1 || -7 || -8 || -9 || -10 || -11) && (2 || 4 || -6 || -7 || -9 || -11) && (1 || 5 || -6 || -8 || -9 || -10) && (1 || 4 || -6 || -8 || -9 || -11) && (1 || 3 || -6 || -8 || -10 || -11) && (1 || 2 || -7 || -9 || -10 || -11) && (3 || 5 || -6 || -7 || -8 || -10) && (4 || 5 || -6 || -7 || -8 || -9) && (2 || 3 || -8 || -10 || -11) && (0 || 1 || -8 || -9 || -10 || -11) && (0 || -7 || -8 || -9 || -10 || -11) && (1 || 3 || -7 || -8 || -10 || -11) && (1 || 2 || -6 || -9 || -10 || -11) && (3 || 4 || -6 || -7 || -8 || -11) && (2 || 5 || -6 || -7 || -9 || -10) && (2 || 3 || -6 || -7 || -10 || -11) && (1 || 4 || -7 || -8 || -9 || -11) && (0 || 3 || -7 || -8 || -10 || -11) && (0 || 5 || -7 || -8 || -9 || -10) && (1 || 3 || 5 || -7 || -8 || -10) && (2 || 4 || 5 || -6 || -7 || -9) && (0 || 4 || -7 || -8 || -9 || -11) && (1 || 3 || 4 || -7 || -8 || -11) && (1 || 2 || 3 || -6 || -10 || -11) && (1 || 3 || 4 || -6 || -8 || -11) && (0 || 2 || 3 || 4 || -7 || -11) && (1 || 2 || 5 || -7 || -9 || -10) && (1 || 2 || 5 || -6 || -9 || -10) && (1 || 2 || 4 || -6 || -9 || -11) && (1 || 4 || 5 || -7 || -8 || -9) && (0 || 3 || 5 || -7 || -8 || -10) && (2 || 3 || 5 || -8 || -10) && (0 || 1 || 5 || -8 || -9 || -10) && (2 || 3 || 4 || -6 || -7 || -11) && (1 || 3 || 4 || 5 || -7 || -8) && (0 || 4 || 5 || -7 || -8 || -9) && (3 || 4 || 5 || -6 || -7 || -8) && (1 || 2 || 3 || 4 || -7 || -11) && (0 || 2 || 4 || -7 || -9 || -11) && (4 || -10 || -11) && (0 || 1 || 2 || -9 || -10 || -11) && (1 || 3 || 5 || -6 || -8 || -10) && (1 || 2 || 3 || 4 || 5 || -7) && (0 || 2 || 4 || 5 || -7 || -9) && (0 || 2 || 5 || -7 || -9 || -10) && (1 || 2 || 3 || 5 || -7 || -10) && (4 || 5 || -10) && (0 || 1 || 2 || 5 || -9 || -10) && (0 || 3 || 4 || 5 || -7 || -8) && (0 || 2 || 3 || 5 || -7 || -10) && (1 || 2 || 4 || 5 || -7 || -9) && (1 || 3 || 4 || 5 || -6 || -8) && (5 || -11) && (0 || 1 || 2 || 4 || -9 || -11) && (2 || 3 || 4 || 5 || -8) && (0 || 1 || 4 || 5 || -8 || -9) && (1 || 5 || -7 || -8 || -9 || -10) && (0 || 3 || 4 || -7 || -8 || -11) && (2 || 3 || 4 || 5 || -6 || -7) && (1 || 4 || 5 || -6 || -8 || -9) && (3 || 4 || -9 || -11) && (0 || 1 || 2 || 3 || -10 || -11) && (0 || 2 || 3 || 4 || 5 || -7) && (0 || 2 || 3 || -7 || -10 || -11) && (1 || 2 || 4 || -7 || -9 || -11) && (0 || 1 || 2 || 3 || 4 || 5) && (2 || 5 || -8 || -9 || -10) && (0 || 1 || 3 || 4 || -8 || -11) && (1 || 2 || 3 || 4 || 5 || -6) && (0 || 1 || 3 || 4 || 5 || -8) && (2 || 4 || -8 || -9 || -11) && (0 || 1 || 3 || -8 || -10 || -11) && (1 || 2 || 3 || 5 || -6 || -10) && (3 || 4 || 5 || -9) && (0 || 1 || 2 || 3 || 5 || -10) && (3 || 5 || -9 || -10) && (0 || 1 || 2 || 3 || 4 || -11) && (2 || 3 || 4 || -8 || -11) && (0 || 1 || 4 || -8 || -9 || -11) && (1 || 2 || 4 || 5 || -6 || -9) && (0 || 2 || -7 || -9 || -10 || -11) && (1 || 2 || 3 || -7 || -10 || -11) && (0 || 1 || 2 || 4 || 5 || -9) && (2 || 4 || 5 || -8 || -9) && (0 || 1 || 3 || 5 || -8 || -10) && (2 || 3 || 5 || -6 || -7 || -10) && (1 || 2 || 3 || 4 || -6 || -11))"),
            -- 191/1280:
            (7, parseCnf "((5 || 6 || -12) && (4 || 6 || -11 || -12) && (4 || 5 || 6 || -11) && (3 || 6 || -10 || -11 || -12) && (3 || 4 || 6 || -10 || -12) && (3 || 5 || 6 || -10 || -11) && (3 || 4 || 5 || 6 || -10) && (2 || 3 || 6 || -9 || -11 || -12) && (2 || 4 || 6 || -9 || -10 || -12) && (2 || 5 || 6 || -9 || -10 || -11) && (2 || 3 || 4 || 6 || -9 || -12) && (2 || 3 || 5 || 6 || -9 || -11) && (2 || 4 || 5 || 6 || -9 || -10) && (2 || 3 || 4 || 5 || 6 || -9) && (1 || -7 || -9 || -10 || -11 || -12 || -13) && (4 || -7 || -8 || -9 || -10 || -12 || -13) && (0 || -8 || -9 || -10 || -11 || -12 || -13) && (1 || -8 || -9 || -10 || -11 || -12 || -13) && (2 || -7 || -8 || -10 || -11 || -12 || -13) && (3 || -7 || -8 || -9 || -11 || -12 || -13) && (6 || -7 || -8 || -9 || -10 || -11 || -12) && (1 || 2 || -7 || -10 || -11 || -12 || -13) && (4 || 6 || -7 || -8 || -9 || -10 || -12) && (1 || 4 || -8 || -9 || -10 || -12 || -13) && (2 || 3 || -7 || -8 || -11 || -12 || -13) && (1 || 3 || -8 || -9 || -11 || -12 || -13) && (0 || 5 || -8 || -9 || -10 || -11 || -13) && (1 || 6 || -8 || -9 || -10 || -11 || -12) && (3 || 4 || -7 || -8 || -9 || -12 || -13) && (2 || 6 || -7 || -8 || -10 || -11 || -12) && (0 || 2 || -8 || -10 || -11 || -12 || -13) && (5 || 6 || -7 || -8 || -9 || -10 || -11) && (1 || 2 || -8 || -10 || -11 || -12 || -13) && (0 || 4 || -8 || -9 || -10 || -12 || -13) && (0 || 3 || -8 || -9 || -11 || -12 || -13) && (3 || 6 || -7 || -8 || -9 || -11 || -12) && (1 || 3 || -7 || -9 || -11 || -12 || -13) && (0 || 6 || -8 || -9 || -10 || -11 || -12) && (1 || 5 || -8 || -9 || -10 || -11 || -13) && (2 || 4 || -7 || -8 || -10 || -12 || -13) && (0 || 1 || -9 || -10 || -11 || -12 || -13) && (1 || 5 || -7 || -9 || -10 || -11 || -13) && (1 || 3 || 5 || -8 || -9 || -11 || -13) && (2 || 3 || 4 || -7 || -8 || -12 || -13) && (0 || 3 || 5 || -8 || -9 || -11 || -13) && (1 || 4 || 6 || -8 || -9 || -10 || -12) && (1 || 6 || -7 || -9 || -10 || -11 || -12) && (0 || 1 || 3 || -9 || -11 || -12 || -13) && (0 || 2 || 4 || -8 || -10 || -12 || -13) && (0 || 2 || 3 || -8 || -11 || -12 || -13) && (4 || 5 || 6 || -7 || -8 || -9 || -10) && (2 || 3 || 6 || -7 || -8 || -11 || -12) && (1 || 2 || 3 || -8 || -11 || -12 || -13) && (1 || 3 || 6 || -7 || -9 || -11 || -12) && (0 || 1 || 4 || -9 || -10 || -12 || -13) && (0 || 3 || 4 || -8 || -9 || -12 || -13) && (2 || -9 || -10 || -11 || -12 || -13) && (0 || 1 || 6 || -9 || -10 || -11 || -12) && (0 || 5 || 6 || -8 || -9 || -10 || -11) && (3 || 5 || 6 || -7 || -8 || -9 || -11) && (1 || 5 || 6 || -7 || -9 || -10 || -11) && (1 || 2 || 6 || -8 || -10 || -11 || -12) && (1 || 3 || 6 || -8 || -9 || -11 || -12) && (2 || 4 || 6 || -7 || -8 || -10 || -12) && (1 || 5 || 6 || -8 || -9 || -10 || -11) && (0 || 2 || 5 || -8 || -10 || -11 || -13) && (1 || 4 || 5 || -8 || -9 || -10 || -13) && (1 || 3 || 5 || -7 || -9 || -11 || -13) && (0 || 4 || 5 || -8 || -9 || -10 || -13) && (1 || 2 || 3 || 4 || 5 || -8 || -13) && (1 || 2 || 4 || 5 || -7 || -10 || -13) && (1 || 4 || 5 || 6 || -7 || -9 || -10) && (0 || 3 || 4 || 6 || -8 || -9 || -12) && (0 || 1 || 4 || 5 || -9 || -10 || -13) && (2 || 4 || 5 || -9 || -10 || -13) && (0 || 1 || 4 || 5 || 6 || -9 || -10) && (2 || 3 || 5 || -7 || -8 || -11 || -13) && (1 || 2 || 3 || 4 || -8 || -12 || -13) && (1 || 2 || 3 || 4 || -7 || -12 || -13) && (0 || 2 || 4 || 6 || -8 || -10 || -12) && (1 || 2 || 5 || -8 || -10 || -11 || -13) && (2 || 3 || -9 || -11 || -12 || -13) && (0 || 1 || 3 || 6 || -9 || -11 || -12) && (1 || 2 || 3 || 6 || -8 || -11 || -12) && (0 || 1 || 2 || 4 || -10 || -12 || -13) && (1 || 2 || 3 || 6 || -7 || -11 || -12) && (1 || 4 || 6 || -7 || -9 || -10 || -12) && (0 || 1 || 3 || 4 || -9 || -12 || -13) && (0 || 3 || 4 || 5 || -8 || -9 || -13) && (3 || 4 || 6 || -7 || -8 || -9 || -12) && (1 || 2 || 5 || 6 || -8 || -10 || -11) && (2 || 4 || 5 || 6 || -7 || -8 || -10) && (3 || -10 || -11 || -12 || -13) && (0 || 1 || 2 || 6 || -10 || -11 || -12) && (0 || 2 || 3 || 4 || -8 || -12 || -13) && (2 || 3 || 4 || 6 || -7 || -8 || -12) && (3 || 4 || 5 || 6 || -7 || -8 || -9) && (1 || 3 || 5 || 6 || -8 || -9 || -11) && (0 || 3 || 5 || 6 || -8 || -9 || -11) && (1 || 2 || 5 || 6 || -7 || -10 || -11) && (1 || 4 || 5 || 6 || -8 || -9 || -10) && (2 || 6 || -9 || -10 || -11 || -12) && (2 || 3 || 4 || 5 || -7 || -8 || -13) && (2 || 4 || -9 || -10 || -12 || -13) && (0 || 1 || 4 || 6 || -9 || -10 || -12) && (1 || 2 || 5 || -7 || -10 || -11 || -13) && (1 || 2 || 3 || 5 || -8 || -11 || -13) && (0 || 4 || 5 || 6 || -8 || -9 || -10) && (1 || 3 || 5 || 6 || -7 || -9 || -11) && (1 || 3 || 4 || 6 || -8 || -9 || -12) && (0 || 2 || 3 || 5 || -8 || -11 || -13) && (0 || 1 || 2 || 5 || -10 || -11 || -13) && (1 || 2 || 3 || 4 || 6 || -7 || -12) && (0 || 1 || 3 || 5 || -9 || -11 || -13) && (1 || 3 || 4 || 6 || -7 || -9 || -12) && (0 || 1 || 5 || -9 || -10 || -11 || -13) && (0 || 1 || 2 || 3 || 4 || -12 || -13) && (1 || 2 || 4 || 6 || -7 || -10 || -12) && (2 || 5 || 6 || -7 || -8 || -10 || -11) && (1 || 2 || 4 || 6 || -8 || -10 || -12) && (0 || 2 || 5 || 6 || -8 || -10 || -11) && (6 || -13) && (3 || 4 || 5 || -7 || -8 || -9 || -13) && (0 || 1 || 2 || 3 || 4 || 5 || 6) && (1 || 2 || 4 || 5 || -8 || -10 || -13) && (1 || 2 || 3 || 5 || -7 || -11 || -13) && (1 || 2 || 3 || -7 || -11 || -12 || -13) && (0 || 2 || 6 || -8 || -10 || -11 || -12) && (2 || 5 || -9 || -10 || -11 || -13) && (0 || 1 || 5 || 6 || -9 || -10 || -11) && (3 || 4 || -10 || -12 || -13) && (0 || 1 || 2 || 4 || 6 || -10 || -12) && (2 || 3 || 4 || -9 || -12 || -13) && (0 || 1 || 3 || 4 || 6 || -9 || -12) && (0 || 2 || 4 || 5 || -8 || -10 || -13) && (1 || 2 || 3 || 5 || 6 || -7 || -11) && (0 || 2 || 3 || 4 || 5 || -8 || -13) && (1 || 2 || 4 || 5 || 6 || -7 || -10) && (0 || 2 || 3 || 4 || 6 || -8 || -12) && (0 || 3 || 4 || 5 || 6 || -8 || -9) && (1 || 2 || 3 || 5 || 6 || -8 || -11) && (2 || 3 || 4 || 5 || 6 || -7 || -8) && (0 || 1 || 2 || 3 || 5 || -11 || -13) && (1 || 2 || 3 || 4 || 5 || -7 || -13) && (0 || 1 || 2 || -10 || -11 || -12 || -13) && (1 || 2 || 4 || 5 || 6 || -8 || -10) && (3 || 5 || -10 || -11 || -13) && (5 || -7 || -8 || -9 || -10 || -11 || -13) && (0 || 1 || 2 || 5 || 6 || -10 || -11) && (2 || 3 || 5 || -9 || -11 || -13) && (2 || 5 || -7 || -8 || -10 || -11 || -13) && (0 || 1 || 3 || 5 || 6 || -9 || -11) && (1 || 3 || 4 || 5 || 6 || -8 || -9) && (0 || 1 || 2 || 4 || 5 || -10 || -13) && (1 || 3 || 4 || 5 || 6 || -7 || -9) && (1 || 2 || 6 || -7 || -10 || -11 || -12) && (0 || 1 || 2 || 3 || -11 || -12 || -13) && (1 || 2 || 3 || 4 || 5 || 6 || -8) && (4 || 5 || -11 || -13) && (3 || 5 || -7 || -8 || -9 || -11 || -13) && (0 || 1 || 2 || 3 || 5 || 6 || -11) && (0 || 2 || 3 || 4 || 5 || 6 || -8) && (0 || 2 || 3 || 5 || 6 || -8 || -11) && (0 || 2 || 4 || 5 || 6 || -8 || -10) && (-7 || -8 || -9 || -10 || -11 || -12 || -13) && (1 || 2 || 3 || 4 || 5 || 6 || -7) && (1 || 3 || 4 || -8 || -9 || -12 || -13) && (0 || 1 || 2 || 3 || 4 || 5 || -13) && (1 || 2 || 4 || -8 || -10 || -12 || -13) && (0 || 1 || 3 || 4 || 5 || -9 || -13) && (1 || 3 || 4 || 5 || -7 || -9 || -13) && (1 || 4 || 5 || -7 || -9 || -10 || -13) && (1 || 3 || 4 || 5 || -8 || -9 || -13) && (5 || -12 || -13) && (0 || 1 || 2 || 3 || 4 || 6 || -12) && (0 || 4 || 6 || -8 || -9 || -10 || -12) && (1 || 3 || 4 || -7 || -9 || -12 || -13) && (1 || 2 || 4 || -7 || -10 || -12 || -13) && (0 || 2 || 3 || 6 || -8 || -11 || -12) && (2 || 3 || 4 || 5 || -9 || -13) && (2 || 4 || 5 || -7 || -8 || -10 || -13) && (0 || 1 || 3 || 4 || 5 || 6 || -9) && (4 || -11 || -12 || -13) && (0 || 1 || 2 || 3 || 6 || -11 || -12) && (2 || 3 || 5 || 6 || -7 || -8 || -11) && (1 || 2 || 3 || 4 || 6 || -8 || -12) && (1 || 4 || -7 || -9 || -10 || -12 || -13) && (0 || 3 || 6 || -8 || -9 || -11 || -12) && (3 || 4 || 5 || -10 || -13) && (4 || 5 || -7 || -8 || -9 || -10 || -13) && (0 || 1 || 2 || 4 || 5 || 6 || -10))")
        ]),
        ("ge", Map.fromList [
            -- 1/2:
            (1, parseCnf "((0 || -1))"),
            -- 3/8:
            (2, parseCnf "((1 || -3) && (0 || -2 || -3) && (0 || 1 || -2))"),
            -- 7/24:
            (3, parseCnf "((2 || -5) && (1 || -4 || -5) && (1 || 2 || -4) && (0 || -3 || -4 || -5) && (0 || 2 || -3 || -4) && (0 || 1 || -3 || -5) && (0 || 1 || 2 || -3))"),
            -- 15/64:
            (4, parseCnf "((3 || -7) && (2 || -6 || -7) && (2 || 3 || -6) && (1 || -5 || -6 || -7) && (1 || 3 || -5 || -6) && (1 || 2 || -5 || -7) && (0 || -4 || -5 || -6 || -7) && (0 || 2 || -4 || -5 || -7) && (1 || 2 || 3 || -5) && (0 || 1 || -4 || -6 || -7) && (0 || 3 || -4 || -5 || -6) && (0 || 2 || 3 || -4 || -5) && (0 || 1 || 3 || -4 || -6) && (0 || 1 || 2 || -4 || -7) && (0 || 1 || 2 || 3 || -4))"),
            -- 31/160:
            (5, parseCnf "((4 || -9) && (3 || -8 || -9) && (3 || 4 || -8) && (2 || -7 || -8 || -9) && (2 || 3 || -7 || -9) && (2 || 4 || -7 || -8) && (2 || 3 || 4 || -7) && (1 || -6 || -7 || -8 || -9) && (1 || 4 || -6 || -7 || -8) && (1 || 3 || -6 || -7 || -9) && (1 || 2 || 4 || -6 || -8) && (1 || 2 || 3 || -6 || -9) && (0 || -5 || -6 || -7 || -8 || -9) && (0 || 3 || -5 || -6 || -7 || -9) && (0 || 4 || -5 || -6 || -7 || -8) && (0 || 2 || -5 || -6 || -8 || -9) && (1 || 3 || 4 || -6 || -7) && (0 || 1 || -5 || -7 || -8 || -9) && (0 || 2 || 3 || -5 || -6 || -9) && (0 || 1 || 4 || -5 || -7 || -8) && (0 || 2 || 4 || -5 || -6 || -8) && (0 || 3 || 4 || -5 || -6 || -7) && (0 || 1 || 3 || -5 || -7 || -9) && (0 || 1 || 3 || 4 || -5 || -7) && (0 || 1 || 2 || 3 || -5 || -9) && (0 || 1 || 2 || 4 || -5 || -8) && (1 || 2 || 3 || 4 || -6) && (0 || 1 || 2 || -5 || -8 || -9) && (1 || 2 || -6 || -8 || -9) && (0 || 2 || 3 || 4 || -5 || -6) && (0 || 1 || 2 || 3 || 4 || -5))"),
            -- 63/384:
            (6, parseCnf "((5 || -11) && (4 || -10 || -11) && (4 || 5 || -10) && (3 || -9 || -10 || -11) && (3 || 5 || -9 || -10) && (3 || 4 || -9 || -11) && (3 || 4 || 5 || -9) && (2 || -8 || -9 || -10 || -11) && (2 || 3 || -8 || -10 || -11) && (2 || 5 || -8 || -9 || -10) && (2 || 4 || -8 || -9 || -11) && (2 || 4 || 5 || -8 || -9) && (2 || 3 || 5 || -8 || -10) && (2 || 3 || 4 || -8 || -11) && (2 || 3 || 4 || 5 || -8) && (1 || -7 || -8 || -9 || -10 || -11) && (1 || 5 || -7 || -8 || -9 || -10) && (1 || 3 || 5 || -7 || -8 || -10) && (1 || 2 || 5 || -7 || -9 || -10) && (1 || 2 || 3 || 5 || -7 || -10) && (1 || 2 || 3 || 4 || -7 || -11) && (0 || -6 || -7 || -8 || -9 || -10 || -11) && (1 || 4 || 5 || -7 || -8 || -9) && (0 || 1 || -6 || -8 || -9 || -10 || -11) && (0 || 3 || -6 || -7 || -8 || -10 || -11) && (0 || 2 || -6 || -7 || -9 || -10 || -11) && (0 || 4 || -6 || -7 || -8 || -9 || -11) && (0 || 5 || -6 || -7 || -8 || -9 || -10) && (1 || 3 || 4 || 5 || -7 || -8) && (0 || 1 || 3 || -6 || -8 || -10 || -11) && (1 || 2 || -7 || -9 || -10 || -11) && (0 || 3 || 5 || -6 || -7 || -8 || -10) && (0 || 3 || 4 || -6 || -7 || -8 || -11) && (0 || 2 || 3 || -6 || -7 || -10 || -11) && (0 || 1 || 5 || -6 || -8 || -9 || -10) && (0 || 1 || 4 || -6 || -8 || -9 || -11) && (1 || 2 || 4 || 5 || -7 || -9) && (0 || 1 || 2 || -6 || -9 || -10 || -11) && (1 || 2 || 3 || -7 || -10 || -11) && (0 || 4 || 5 || -6 || -7 || -8 || -9) && (0 || 1 || 3 || 4 || -6 || -8 || -11) && (1 || 3 || -7 || -8 || -10 || -11) && (0 || 2 || 3 || 5 || -6 || -7 || -10) && (0 || 1 || 2 || 4 || -6 || -9 || -11) && (0 || 1 || 4 || 5 || -6 || -8 || -9) && (0 || 2 || 3 || 4 || -6 || -7 || -11) && (1 || 2 || 4 || -7 || -9 || -11) && (0 || 3 || 4 || 5 || -6 || -7 || -8) && (0 || 2 || 4 || -6 || -7 || -9 || -11) && (0 || 1 || 3 || 5 || -6 || -8 || -10) && (0 || 2 || 5 || -6 || -7 || -9 || -10) && (1 || 2 || 3 || 4 || 5 || -7) && (0 || 1 || 2 || 3 || -6 || -10 || -11) && (0 || 1 || 2 || 4 || 5 || -6 || -9) && (0 || 1 || 2 || 5 || -6 || -9 || -10) && (1 || 3 || 4 || -7 || -8 || -11) && (0 || 2 || 3 || 4 || 5 || -6 || -7) && (0 || 1 || 3 || 4 || 5 || -6 || -8) && (1 || 4 || -7 || -8 || -9 || -11) && (0 || 2 || 4 || 5 || -6 || -7 || -9) && (0 || 1 || 2 || 3 || 4 || -6 || -11) && (0 || 1 || 2 || 3 || 5 || -6 || -10) && (0 || 1 || 2 || 3 || 4 || 5 || -6))"),
            -- 127/896:
            (7, parseCnf "((6 || -13) && (5 || 6 || -12) && (4 || 6 || -11 || -12) && (4 || 5 || -11 || -13) && (3 || -10 || -11 || -12 || -13) && (3 || 6 || -10 || -11 || -12) && (3 || 4 || 6 || -10 || -12) && (3 || 4 || 5 || -10 || -13) && (2 || -9 || -10 || -11 || -12 || -13) && (2 || 6 || -9 || -10 || -11 || -12) && (2 || 3 || 6 || -9 || -11 || -12) && (2 || 4 || 6 || -9 || -10 || -12) && (2 || 5 || 6 || -9 || -10 || -11) && (2 || 3 || 5 || -9 || -11 || -13) && (2 || 4 || 5 || -9 || -10 || -13) && (2 || 3 || 4 || 5 || -9 || -13) && (2 || 3 || 4 || 6 || -9 || -12) && (1 || -8 || -9 || -10 || -11 || -12 || -13) && (1 || 4 || -8 || -9 || -10 || -12 || -13) && (1 || 5 || -8 || -9 || -10 || -11 || -13) && (1 || 2 || -8 || -10 || -11 || -12 || -13) && (1 || 3 || -8 || -9 || -11 || -12 || -13) && (1 || 2 || 3 || -8 || -11 || -12 || -13) && (1 || 3 || 4 || -8 || -9 || -12 || -13) && (1 || 5 || 6 || -8 || -9 || -10 || -11) && (1 || 2 || 5 || -8 || -10 || -11 || -13) && (1 || 4 || 5 || -8 || -9 || -10 || -13) && (1 || 2 || 4 || -8 || -10 || -12 || -13) && (1 || 3 || 5 || -8 || -9 || -11 || -13) && (1 || 3 || 4 || 6 || -8 || -9 || -12) && (0 || 1 || 2 || 3 || 4 || -7 || -12 || -13) && (1 || 2 || 4 || 6 || -8 || -10 || -12) && (1 || 2 || 3 || 5 || -8 || -11 || -13) && (1 || 2 || 4 || 5 || -8 || -10 || -13) && (1 || 4 || 5 || 6 || -8 || -9 || -10) && (1 || 2 || 5 || 6 || -8 || -10 || -11) && (1 || 3 || 5 || 6 || -8 || -9 || -11) && (1 || 2 || 3 || 4 || -8 || -12 || -13) && (1 || 2 || 3 || 5 || 6 || -8 || -11) && (1 || 2 || 3 || 4 || 6 || -8 || -12) && (1 || 2 || 4 || 5 || 6 || -8 || -10) && (1 || 3 || 4 || 5 || 6 || -8 || -9) && (1 || 2 || 3 || 4 || 5 || 6 || -8) && (0 || 1 || 2 || 3 || 4 || 5 || 6 || -7) && (0 || -7 || -8 || -9 || -10 || -11 || -12 || -13) && (0 || 2 || -7 || -8 || -10 || -11 || -12 || -13) && (0 || 3 || -7 || -8 || -9 || -11 || -12 || -13) && (0 || 1 || -7 || -9 || -10 || -11 || -12 || -13) && (0 || 4 || -7 || -8 || -9 || -10 || -12 || -13) && (0 || 6 || -7 || -8 || -9 || -10 || -11 || -12) && (3 || 5 || 6 || -10 || -11) && (0 || 5 || -7 || -8 || -9 || -10 || -11 || -13) && (1 || 6 || -8 || -9 || -10 || -11 || -12) && (0 || 1 || 3 || -7 || -9 || -11 || -12 || -13) && (1 || 3 || 4 || 5 || -8 || -9 || -13) && (0 || 1 || 5 || -7 || -9 || -10 || -11 || -13) && (0 || 1 || 2 || 3 || -7 || -11 || -12 || -13) && (1 || 2 || 6 || -8 || -10 || -11 || -12) && (1 || 3 || 6 || -8 || -9 || -11 || -12) && (0 || 1 || 4 || -7 || -9 || -10 || -12 || -13) && (4 || 5 || 6 || -11) && (0 || 3 || 5 || -7 || -8 || -9 || -11 || -13) && (2 || 3 || -9 || -11 || -12 || -13) && (0 || 1 || 6 || -7 || -9 || -10 || -11 || -12) && (0 || 1 || 2 || -7 || -10 || -11 || -12 || -13) && (0 || 2 || 4 || -7 || -8 || -10 || -12 || -13) && (3 || 4 || 5 || 6 || -10) && (0 || 4 || 5 || -7 || -8 || -9 || -10 || -13) && (0 || 2 || 3 || -7 || -8 || -11 || -12 || -13) && (2 || 3 || 5 || 6 || -9 || -11) && (0 || 2 || 5 || -7 || -8 || -10 || -11 || -13) && (0 || 2 || 4 || 5 || -7 || -8 || -10 || -13) && (2 || 3 || 4 || 5 || 6 || -9) && (0 || 1 || 2 || 4 || -7 || -10 || -12 || -13) && (1 || 2 || 3 || 6 || -8 || -11 || -12) && (1 || 4 || 6 || -8 || -9 || -10 || -12) && (0 || 1 || 3 || 4 || -7 || -9 || -12 || -13) && (2 || 3 || 4 || -9 || -12 || -13) && (0 || 1 || 4 || 6 || -7 || -9 || -10 || -12) && (0 || 1 || 3 || 5 || -7 || -9 || -11 || -13) && (0 || 1 || 4 || 5 || -7 || -9 || -10 || -13) && (0 || 3 || 4 || 5 || -7 || -8 || -9 || -13) && (0 || 2 || 4 || 6 || -7 || -8 || -10 || -12) && (0 || 4 || 5 || 6 || -7 || -8 || -9 || -10) && (2 || 4 || 5 || 6 || -9 || -10) && (0 || 2 || 3 || 5 || -7 || -8 || -11 || -13) && (2 || 4 || -9 || -10 || -12 || -13) && (0 || 1 || 3 || 6 || -7 || -9 || -11 || -12) && (1 || 2 || 3 || 4 || 5 || -8 || -13) && (0 || 1 || 2 || 5 || -7 || -10 || -11 || -13) && (0 || 1 || 2 || 5 || 6 || -7 || -10 || -11) && (0 || 2 || 3 || 4 || -7 || -8 || -12 || -13) && (0 || 3 || 5 || 6 || -7 || -8 || -9 || -11) && (0 || 2 || 3 || 6 || -7 || -8 || -11 || -12) && (0 || 2 || 4 || 5 || 6 || -7 || -8 || -10) && (0 || 3 || 4 || 6 || -7 || -8 || -9 || -12) && (0 || 3 || 4 || -7 || -8 || -9 || -12 || -13) && (0 || 1 || 5 || 6 || -7 || -9 || -10 || -11) && (0 || 1 || 2 || 4 || 5 || -7 || -10 || -13) && (0 || 3 || 4 || 5 || 6 || -7 || -8 || -9) && (0 || 2 || 3 || 4 || 6 || -7 || -8 || -12) && (0 || 1 || 3 || 5 || 6 || -7 || -9 || -11) && (4 || -11 || -12 || -13) && (0 || 1 || 2 || 6 || -7 || -10 || -11 || -12) && (0 || 2 || 3 || 4 || 5 || -7 || -8 || -13) && (0 || 1 || 2 || 3 || 5 || -7 || -11 || -13) && (0 || 1 || 3 || 4 || 5 || -7 || -9 || -13) && (0 || 1 || 4 || 5 || 6 || -7 || -9 || -10) && (0 || 2 || 3 || 4 || 5 || 6 || -7 || -8) && (0 || 2 || 6 || -7 || -8 || -10 || -11 || -12) && (0 || 5 || 6 || -7 || -8 || -9 || -10 || -11) && (5 || -12 || -13) && (0 || 1 || 2 || 4 || 6 || -7 || -10 || -12) && (0 || 1 || 2 || 4 || 5 || 6 || -7 || -10) && (0 || 4 || 6 || -7 || -8 || -9 || -10 || -12) && (0 || 2 || 3 || 5 || 6 || -7 || -8 || -11) && (3 || 5 || -10 || -11 || -13) && (0 || 1 || 2 || 3 || 4 || 6 || -7 || -12) && (0 || 3 || 6 || -7 || -8 || -9 || -11 || -12) && (0 || 2 || 5 || 6 || -7 || -8 || -10 || -11) && (2 || 5 || -9 || -10 || -11 || -13) && (0 || 1 || 3 || 4 || 6 || -7 || -9 || -12) && (0 || 1 || 3 || 4 || 5 || 6 || -7 || -9) && (0 || 1 || 2 || 3 || 4 || 5 || -7 || -13) && (3 || 4 || -10 || -12 || -13) && (0 || 1 || 2 || 3 || 6 || -7 || -11 || -12) && (0 || 1 || 2 || 3 || 5 || 6 || -7 || -11))")
        ])
    ]),
    ("OptNatStruct1Ex",  Map.fromList [
        ("add", Map.fromList [
            (1, parseCnf "((-1 || -3) && (-1 || 2) && (2 || -3) && (1 || -2 || 3) && (-0 || 3) && (0 || -3))"),
            (2, parseCnf "((-1 || -6) && (-1 || -3) && (-3 || -6) && (0 || -2 || 4) && (0 || 2 || -4) && (5 || -6) && (-1 || 5) && (-0 || -2 || -4) && (-0 || 2 || 4) && (-3 || 5) && (1 || 3 || -5 || 6) && (2 || -6) && (0 || -6) && (-0 || -2 || 6))"),
            (3, parseCnf "((-2 || -5) && (-2 || 8) && (-1 || -2 || -9) && (-0 || -3 || -6) && (-1 || -5 || -9) && (-2 || -4 || 7) && (-1 || 8 || -9) && (-1 || -4 || -7 || 9) && (-0 || 3 || 6) && (1 || 2 || 5 || -8 || 9) && (1 || -4 || -7 || -9) && (-5 || 8) && (2 || 4 || 5 || -7 || -8) && (1 || 4 || 7 || -9) && (-4 || 7 || 8) && (-4 || -5 || 7) && (0 || -3 || 6) && (1 || 4 || -7 || 9) && (-1 || 4 || 7 || 9) && (0 || 3 || -6) && (-1 || -4 || 7 || -9) && (3 || -9) && (0 || -9) && (-0 || -3 || 9))"),
            -- 40/145 (better than without extra var):
            (4, parseCnf "((-7 || 11) && (-3 || 11) && (-0 || -4 || -8) && (-2 || -3 || -6) && (-7 || 10 || -12) && (3 || 7 || -10 || -11 || 12) && (1 || 4 || 5 || -9) && (-2 || 6 || 10 || 12) && (0 || -4 || 8) && (-0 || -1 || -5 || 8 || 9) && (10 || 11 || -12) && (-3 || 10 || -12) && (2 || -6 || 10 || 12) && (-0 || 1 || 5 || 8 || 9) && (2 || 6 || -10 || 12) && (-3 || -7) && (1 || 4 || -5 || 9) && (0 || 4 || -8) && (-2 || -6 || -7) && (-0 || 1 || -5 || 8 || -9) && (-2 || -6 || 11) && (-0 || -1 || 5 || 8 || -9) && (-1 || 4 || 5 || 9) && (1 || -5 || -8 || 9) && (-1 || 5 || -8 || 9) && (-1 || -5 || -8 || -9) && (-2 || -6 || 10 || -12) && (-2 || 6 || -10 || -12) && (2 || 3 || 6 || 7 || -11) && (-1 || 4 || -5 || -9) && (2 || -6 || -10 || -12) && (1 || 5 || -8 || -9) && (0 || 1 || -12) && (1 || 4 || -12) && (-1 || -5 || 12) && (1 || 5 || -12) && (0 || 5 || -12) && (4 || 5 || -12) && (-0 || -1 || -4 || 12) && (-0 || -4 || -5 || 12))")
        ]),
        ("mul", Map.fromList [
            (1, parseCnf "((1 || -2) && (3) && (0 || -2) && (-0 || -1 || 2) && (3))"),
            (2, parseCnf "((-3 || -6) && (0 || -4) && (2 || -4) && (-0 || -2 || 4) && (-0 || -3 || 5) && (0 || -3 || -5) && (3 || -5 || 6) && (2 || -5 || -6) && (-2 || 5 || -6) && (-1 || 6) && (1 || -6))"),
            (3, parseCnf "((-5 || -9) && (0 || -6) && (3 || -6) && (-0 || -5 || 8) && (-1 || -4 || 8) && (-1 || -4 || -6) && (3 || -8 || -9) && (-0 || -4 || 7) && (0 || 3 || -7) && (3 || 4 || -7) && (1 || 4 || -7) && (-1 || -5) && (0 || -5 || -8) && (-4 || -9) && (4 || 5 || -8 || 9) && (1 || 5 || -8 || 9) && (-3 || 8 || -9) && (-0 || -3 || 6) && (-1 || -3 || 7) && (0 || 1 || -7) && (-2 || 9) && (2 || -9))"),
            -- 4 Bit is worse (39,125) than without extra variables (37,123)
            -- This is the replacement:
            -- [Equiv [Atom (Variable 12),And [Or [],Or [And [And [Atom (Variable 3),Atom (Variable 4)],Or [And [And [Atom (Variable 2),Atom (Variable 4)],And [And [Atom (Variable 0),Atom (Variable 5)],And [Atom (Variable 1),Atom (Variable 4)]]],And [And [Atom (Variable 1),Atom (Variable 5)],And [And [Atom (Variable 0),Atom (Variable 5)],And [Atom (Variable 1),Atom (Variable 4)]]],And [And [Atom (Variable 1),Atom (Variable 5)],And [Atom (Variable 2),Atom (Variable 4)]]]],And [And [Atom (Variable 2),Atom (Variable 5)],Or [And [And [Atom (Variable 2),Atom (Variable 4)],And [And [Atom (Variable 0),Atom (Variable 5)],And [Atom (Variable 1),Atom (Variable 4)]]],And [And [Atom (Variable 1),Atom (Variable 5)],And [And [Atom (Variable 0),Atom (Variable 5)],And [Atom (Variable 1),Atom (Variable 4)]]],And [And [Atom (Variable 1),Atom (Variable 5)],And [Atom (Variable 2),Atom (Variable 4)]]]], And [And [Atom (Variable 2),Atom (Variable 5)],And [Atom (Variable 3),Atom (Variable 4)]]]]]]
            (4, parseCnf "((-12) && (-3 || -6) && (4 || -8) && (-2 || -5 || 11) && (-0 || -6 || 10) && (-3 || 4 || -11) && (-0 || -4 || 8) && (1 || 5 || -9) && (0 || 4 || -9) && (-0 || -5 || 9 || -10) && (-1 || -6 || 11) && (0 || -7 || -11) && (-1 || -5 || 8 || 10) && (-1 || -4 || 5 || 9) && (-3 || -7) && (4 || 5 || 6 || -10) && (1 || 4 || 6 || -10) && (0 || 1 || 2 || -10) && (-1 || -2 || -4 || -5) && (-2 || -6) && (-3 || -5) && (2 || 6 || -8 || -10) && (-0 || -7 || 11) && (-3 || -4 || 11) && (0 || 1 || -9) && (-1 || -4 || 9 || -10) && (4 || 5 || -9) && (-1 || -7) && (0 || -8) && (0 || 2 || 5 || -10) && (-0 || 1 || -5 || 9) && (2 || 6 || -10 || -11) && (-2 || -4 || 10) && (-0 || 2 || -5 || 7 || -9 || -11) && (-1 || -5 || -8 || 11) && (1 || 2 || 3 || 7 || -11) && (3 || 5 || 6 || 7 || -11) && (-2 || -7) && (-12))")
        ]),
        ("gt", Map.fromList [
            (1, parseCnf "((-1) && (2) && (0 || -2) && (-0 || 2))"),
            (2, parseCnf "((-3 || 4) && (1 || -3) && (1 || 4) && (-2 || -4) && (0 || -4) && (-0 || 2 || 4))"),
            (3, parseCnf "((2 || -5) && (1 || -4 || -5) && (-4 || -5 || 6) && (2 || -4 || 6) && (1 || -5 || 6) && (1 || 2 || -4) && (1 || 2 || 6) && (-3 || -6) && (0 || -6) && (-0 || 3 || 6))"),
            (4, parseCnf "((1 || -5 || 8) && (-2 || 6 || 8) && (2 || -6 || 8) && (-4 || -5 || 8) && (3 || -7 || 8) && (-3 || 7 || 8) && (1 || -4 || 8) && (0 || -5 || 8) && (0 || 1 || 8) && (-6 || -7 || -8) && (2 || -7 || -8) && (3 || -6 || -8) && (2 || 3 || -8) && (3 || -7 || -8) && (-3 || 7 || 8) && (-2 || -3 || 6 || 8) && (-2 || 6 || 7 || 8))"),
            (5, parseCnf "((2 || -7 || 10) && (-4 || 9 || 10) && (-3 || 8 || 10) && (0 || 1 || 2 || 10) && (1 || -6 || -7 || 10) && (1 || 2 || -6 || 10) && (4 || -9 || 10) && (-5 || -6 || -7 || 10) && (3 || -8 || 10) && (0 || 2 || -6 || 10) && (1 || 2 || -5 || 10) && (0 || 1 || -7 || 10) && (0 || -6 || -7 || 10) && (2 || -5 || -6 || 10) && (1 || -5 || -7 || 10) && (-8 || -9 || -10) && (3 || -9 || -10) && (4 || -8 || -10) && (3 || 4 || -10) && (4 || -9 || -10) && (-4 || 9 || 10) && (-3 || -4 || 8 || 10) && (-3 || 8 || 9 || 10))"),
            (6, parseCnf "((-5 || 11 || 12) && (-3 || 9 || 12) && (3 || -9 || 12) && (4 || -10 || 12) && (5 || -11 || 12) && (2 || -8 || 12) && (0 || 1 || 2 || 12) && (1 || 2 || -6 || 12) && (1 || -7 || -8 || 12) && (1 || -6 || -8 || 12) && (0 || 1 || -8 || 12) && (1 || 2 || -7 || 12) && (0 || 2 || -7 || 12) && (2 || -6 || -7 || 12) && (-4 || 10 || 12) && (-6 || -7 || -8 || 12) && (0 || -7 || -8 || 12) && (5 || -11 || -12) && (-5 || 11 || 12) && (-9 || -10 || -11 || -12) && (4 || -9 || -11 || -12) && (3 || -10 || -11 || -12) && (5 || -9 || -10 || -12) && (3 || 4 || -11 || -12) && (-3 || 9 || 10 || 11 || 12) && (-3 || -4 || -5 || 9 || 12) && (-3 || -4 || 9 || 11 || 12) && (3 || 5 || -10 || -12) && (-3 || -5 || 9 || 10 || 12) && (4 || -10 || -11 || -12) && (3 || 4 || 5 || -12) && (-4 || 10 || 11 || 12) && (4 || 5 || -9 || -12) && (-4 || -5 || 10 || 12) && (4 || 5 || -10 || -12))"),
            (7, parseCnf "((-5 || 12 || 14) && (-6 || 13 || 14) && (-4 || 11 || 14) && (3 || -10 || 14) && (6 || -13 || 14) && (1 || 3 || -7 || -9 || 14) && (0 || -8 || -9 || -10 || 14) && (5 || -12 || 14) && (1 || 3 || -8 || -9 || 14) && (3 || -7 || -8 || -9 || 14) && (1 || 2 || 3 || -7 || 14) && (0 || 2 || -8 || -10 || 14) && (0 || 1 || 3 || -9 || 14) && (1 || -7 || -9 || -10 || 14) && (2 || -9 || -10 || 14) && (1 || 2 || -7 || -10 || 14) && (0 || 1 || 2 || 3 || 14) && (1 || 2 || 3 || -8 || 14) && (2 || 3 || -7 || -8 || 14) && (0 || 1 || -9 || -10 || 14) && (0 || 2 || 3 || -8 || 14) && (1 || 2 || -8 || -10 || 14) && (2 || -7 || -8 || -10 || 14) && (4 || -11 || 14) && (0 || 1 || 2 || -10 || 14) && (0 || 3 || -8 || -9 || 14) && (1 || -8 || -9 || -10 || 14) && (2 || 3 || -9 || 14) && (-7 || -8 || -9 || -10 || 14) && (6 || -13 || -14) && (-6 || 13 || 14) && (-11 || -12 || -13 || -14) && (5 || -11 || -13 || -14) && (4 || -12 || -13 || -14) && (6 || -11 || -12 || -14) && (4 || 5 || -13 || -14) && (-4 || 11 || 12 || 13 || 14) && (-4 || -5 || -6 || 11 || 14) && (-4 || -5 || 11 || 13 || 14) && (4 || 6 || -12 || -14) && (-4 || -6 || 11 || 12 || 14) && (5 || -12 || -13 || -14) && (4 || 5 || 6 || -14) && (-5 || 12 || 13 || 14) && (5 || 6 || -11 || -14) && (-5 || -6 || 12 || 14) && (5 || 6 || -12 || -14))")
        ]),
        ("ge", Map.fromList [
            (1, parseCnf "((0 || -2) && (1 || -2) && (-1 || 2))"),
            (2, parseCnf "((1 || -3) && (0 || -3 || -4) && (0 || 1 || -4) && (2 || -4) && (-2 || 4))"),
            (3, parseCnf "((2 || -5) && (1 || -4 || -6) && (0 || -3 || -4 || -6) && (0 || 1 || -3 || -6) && (2 || -5 || -6) && (-2 || 5 || -6) && (-2 || -5 || 6) && (2 || 5 || 6))"),
            (4, parseCnf "((2 || -6 || -8) && (1 || -5 || -6 || -8) && (1 || 2 || -5 || -8) && (0 || -4 || -5 || -6 || -8) && (0 || 2 || -4 || -5 || -8) && (0 || 1 || -4 || -6 || -8) && (3 || -7) && (0 || 1 || 2 || -4 || -8) && (3 || -7 || -8) && (-3 || 7 || -8) && (-3 || -7 || 8) && (3 || 7 || 8))"),
            (5, parseCnf "((4 || -9) && (2 || -7 || -10) && (1 || -6 || -7 || -10) && (3 || 4 || -8) && (1 || 2 || -6 || -10) && (3 || -8 || -9) && (0 || -5 || -6 || -7 || -10) && (0 || 1 || -5 || -7 || -10) && (0 || 2 || -5 || -6 || -10) && (0 || 1 || 2 || -5 || -10) && (4 || -9 || -10) && (-4 || 9 || -10) && (3 || -8 || -10) && (-3 || 8 || -10) && (-3 || -4 || -8 || -9 || 10) && (3 || -4 || 8 || -9 || 10) && (-3 || 4 || -8 || 9 || 10) && (3 || 4 || 8 || 9 || 10))"),
            (6, parseCnf "((5 || -11) && (4 || -10 || -11) && (0 || 1 || 2 || 3 || -6 || -12) && (2 || 3 || -8 || -12) && (0 || 1 || 3 || -6 || -8 || -12) && (3 || -9 || -12) && (0 || 1 || 2 || -6 || -9 || -12) && (2 || -8 || -9 || -12) && (0 || 1 || -6 || -8 || -9 || -12) && (4 || 5 || -10) && (1 || 3 || -7 || -8 || -12) && (0 || 3 || -6 || -7 || -8 || -12) && (0 || 2 || 3 || -6 || -7 || -12) && (1 || 2 || 3 || -7 || -12) && (1 || -7 || -8 || -9 || -12) && (0 || -6 || -7 || -8 || -9 || -12) && (0 || 2 || -6 || -7 || -9 || -12) && (1 || 2 || -7 || -9 || -12) && (5 || -11 || -12) && (-5 || 11 || -12) && (4 || -10 || -12) && (-4 || 10 || -12) && (-4 || -5 || -10 || -11 || 12) && (4 || -5 || 10 || -11 || 12) && (-4 || 5 || -10 || 11 || 12) && (4 || 5 || 10 || 11 || 12))"),
            (7, parseCnf "((6 || -13) && (3 || -10 || -14) && (5 || 6 || -12) && (2 || -9 || -10 || -14) && (4 || -11 || -12 || -13) && (4 || 6 || -11 || -12) && (4 || 5 || 6 || -11) && (0 || 2 || 3 || -7 || -8 || -14) && (5 || -12 || -13) && (2 || 3 || -9 || -14) && (0 || 1 || -7 || -9 || -10 || -14) && (1 || -8 || -9 || -10 || -14) && (0 || 1 || 3 || -7 || -9 || -14) && (0 || 1 || 2 || -7 || -10 || -14) && (0 || 3 || -7 || -8 || -9 || -14) && (4 || 5 || -11 || -13) && (1 || 3 || -8 || -9 || -14) && (0 || -7 || -8 || -9 || -10 || -14) && (0 || 2 || -7 || -8 || -10 || -14) && (1 || 2 || 3 || -8 || -14) && (0 || 1 || 2 || 3 || -7 || -14) && (1 || 2 || -8 || -10 || -14) && (4 || 5 || 6 || 11 || 12 || 13 || 14) && (-4 || 11 || -14) && (4 || -5 || 6 || 11 || -12 || 13 || 14) && (-5 || 12 || -14) && (4 || -11 || -14) && (4 || 5 || -6 || 11 || 12 || -13 || 14) && (-4 || 5 || -6 || -11 || 12 || -13 || 14) && (4 || -5 || -6 || 11 || -12 || -13 || 14) && (-4 || -5 || -6 || -11 || -12 || -13 || 14) && (-4 || 5 || 6 || -11 || 12 || 13 || 14) && (6 || -13 || -14) && (5 || -12 || -14) && (-4 || -5 || 6 || -11 || -12 || 13 || 14) && (-6 || 13 || -14))")
        ])
    ]),
    ("OptNatStruct2Ex",  Map.fromList [
        ("add", Map.fromList [
            (1, parseCnf "((2 || -3) && (-3 || -4) && (2 || -4) && (-2 || 3 || 4) && (-1 || 3) && (1 || -3) && (-0 || 4) && (0 || -4))"),
            (2, parseCnf "((-1 || -6) && (-6 || -7) && (5 || -7) && (-1 || 5) && (-1 || -7) && (-0 || 2 || 4) && (-0 || -2 || -4) && (0 || 2 || -4) && (0 || -2 || 4) && (5 || -6) && (1 || -5 || 6 || 7) && (2 || -6) && (0 || -6) && (-0 || -2 || 6) && (-3 || 7) && (3 || -7))")
        ]),
        ("mul", Map.fromList [
            (1, parseCnf "((1 || -2) && (4) && (0 || -2) && (-0 || -1 || 2) && (-3) && (-3 || -4) && (3 || 4))"),
            (2, parseCnf "((-6 || -7) && (2 || -5 || -7) && (-2 || 5 || -7) && (2 || -4) && (-0 || -2 || 4) && (0 || -5 || -6) && (0 || -4) && (-0 || 5 || -6) && (-5 || 6 || 7) && (-3 || 6) && (3 || -6) && (-1 || 7) && (1 || -7))")
        ])
    ]),
    ("OptNatGen1Ex",  Map.fromList [
            ("add", Map.fromList []),
            ("mul", Map.fromList [
                (3, parseCnf "((3 || 4 || -7) && (0 || 1 || -7) && (2 || 5 || -6 || -8) && (-2 || -3 || 8) && (-0 || -5 || 8) && (1 || -8 || -9) && (3 || 5 || 9) && (0 || 2 || 9) && (4 || -8 || -9) && (-0 || -3 || 6) && (-1 || -3 || 7) && (-0 || -4 || 7) && (3 || -6) && (0 || -6) && (-1 || -4 || 8) && (1 || 4 || -7) && (-2 || -4) && (-1 || -5) && (-2 || -5) && (0 || 3 || -7))")
            ])
    ]),
    ("OptNatTruth1Ex",  Map.fromList [
        ("add", Map.fromList [
            get "OptNatNoExtra" "add" 1,
            (2, parseCnf "((-3 || -6) && (-3 || 5) && (-1 || 6) && (-0 || -2 || 6) && (-0 || -1 || -2) && (-0 || 2 || 4) && (0 || -2 || 4) && (0 || 2 || -4) && (1 || 2 || 3 || -5) && (1 || 3 || -4 || -5) && (5 || -6))")
        ]),
        ("mul", Map.fromList [
            get "OptNatNoExtra" "mul" 1,
            get "OptNatNoExtra" "mul" 2
        ]),
        ("gt", Map.fromList [
            get "OptNatNoExtra" "gt" 1,
            get "OptNatNoExtra" "gt" 2,
            (3, parseCnf "((-5 || -6) && (-3 || -4 || 6) && (0 || -4 || 6) && (0 || 1 || 6) && (1 || -4 || 6) && (1 || -3 || 6) && (2 || -6) && (2 || -5))")
        ]),
        ("ge", Map.fromList [
            get "OptNatNoExtra" "ge" 1,
            get "OptNatNoExtra" "ge" 2,
            (3, parseCnf "((-5 || 6) && (0 || -3 || -4 || -6) && (0 || 1 || -3 || -6) && (1 || -4 || -6) && (2 || -5) && (2 || 6))")
        ])
    ])
    ]

get :: String -> String -> Int -> (Int, Formula)
get minMode arithmeticOp numBits =
    let f = fromJust $ getIfAvailable minMode arithmeticOp numBits
    in (numBits, f)

getIfAvailable :: String -> String -> Int -> Maybe Formula
getIfAvailable minMode arithmeticOp numBits =
    Map.lookup minMode formulas >>= Map.lookup arithmeticOp >>= Map.lookup numBits

techniques :: [String]
techniques
    | Set.fromList (Map.keys formulas) /= Set.fromList ordered = error "CalculatedFormulas.techniques: Invalid technique keys."
    | otherwise = ordered
    where ordered = ["OptNatNoExtra", "OptNatStruct1Ex", "OptNatTruth1Ex", "OptNatGen1Ex"]

latexTable :: String
latexTable = latexTableWith [
    ("add", [1..5]),
    ("mul", [1..5]),
    ("gt", [1..7]),
    ("ge", [1..7])
    ]

printOp :: String -> Int -> String
printOp op numBits = opName ++ " & " ++ show numBits
    where opName = case op of
            "add" -> "$+$"
            "mul" -> "$\\cdot$"
            "gt" -> "$>$"
            "ge" -> "$\\geq$"
            _ -> "?"

printTech :: String -> String
printTech "OptNatNoExtra" = "$k=0$"
printTech "OptNatStruct1Ex" = "$k=1$ (struct)"
printTech "OptNatTruth1Ex" = "$k=1$ (truth)"
printTech "OptNatGen1Ex" = "$k=1$ (gen)"

latexTableWith :: [(String,[Int])] -> String
latexTableWith selection =
    let begin = "\\begin{tabular}{" ++ intercalate " | " (replicate (2 + length techniques) "c") ++ "}\n"
        header = intercalate " & " ("Op" : "Bits" : map printTech techniques) ++ "\\\\\n\\hline\n"
        makeLine op numBits = intercalate " & " $ printOp op numBits : map (makeCell op numBits) techniques
        theLines = concat [concatMap (\b -> makeLine op b ++ "\\\\\n") bitNums ++ "\\hline\n" | (op,bitNums) <- selection]
        end = "\\end{tabular}\n"
    in begin ++ header ++ theLines ++ end

makeCell :: String -> Int -> String -> String
makeCell op numBits technique =
    let otherScores = catMaybes $ map (\tech -> fmap (numLiterals . getStats) $ getIfAvailable tech op numBits) $ delete technique techniques
        noExtraVarScore = maybe (maxBound::Int) (numLiterals . getStats) $ getIfAvailable "OptNatNoExtra" op numBits :: Int
    in case getIfAvailable technique op numBits of
        Nothing -> " "
        Just cnf ->
            let stats = getStats cnf
                isBest = all (numLiterals stats <=) otherScores
                shouldColor
                    | not isBest = False
                    | technique == "OptNatNoExtra" = isBest
                    | otherwise = numLiterals stats < noExtraVarScore
                color cell
                    | shouldColor = "$\\Color{OliveGreen}{" ++ cell ++ "}$"
                    | otherwise = cell
            in color $ show (numClauses stats) ++ "/" ++ show (numLiterals stats)
